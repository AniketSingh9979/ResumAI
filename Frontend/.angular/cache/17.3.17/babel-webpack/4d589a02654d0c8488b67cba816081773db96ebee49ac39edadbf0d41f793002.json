{"ast":null,"code":"import _asyncToGenerator from \"C:/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/interview.service\";\nimport * as i3 from \"@angular/common\";\nfunction SubjectiveQAComponent_button_11_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\nfunction SubjectiveQAComponent_button_11_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 25);\n  }\n}\nfunction SubjectiveQAComponent_button_11_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 26);\n  }\n}\nfunction SubjectiveQAComponent_button_11_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 27);\n  }\n}\nfunction SubjectiveQAComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function SubjectiveQAComponent_button_11_Template_button_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.navigateToQuestion(i_r2));\n    });\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 19);\n    i0.ɵɵtemplate(4, SubjectiveQAComponent_button_11_i_4_Template, 1, 0, \"i\", 20)(5, SubjectiveQAComponent_button_11_i_5_Template, 1, 0, \"i\", 21)(6, SubjectiveQAComponent_button_11_i_6_Template, 1, 0, \"i\", 22)(7, SubjectiveQAComponent_button_11_i_7_Template, 1, 0, \"i\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 === ctx_r2.currentQuestionIndex)(\"answered\", ctx_r2.isQuestionAnswered(i_r2))(\"correct\", ctx_r2.getAnswerStatus(i_r2) === \"correct\")(\"partial\", ctx_r2.getAnswerStatus(i_r2) === \"partial\")(\"incorrect\", ctx_r2.getAnswerStatus(i_r2) === \"incorrect\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(i_r2) === \"correct\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(i_r2) === \"partial\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(i_r2) === \"incorrect\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(i_r2) === \"unanswered\");\n  }\n}\nfunction SubjectiveQAComponent_div_12_i_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 45);\n  }\n}\nfunction SubjectiveQAComponent_div_12_i_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 46);\n  }\n}\nfunction SubjectiveQAComponent_div_12_div_26_i_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\nfunction SubjectiveQAComponent_div_12_div_26_i_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 25);\n  }\n}\nfunction SubjectiveQAComponent_div_12_div_26_i_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 26);\n  }\n}\nfunction SubjectiveQAComponent_div_12_div_26_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57)(1, \"h5\");\n    i0.ɵɵtext(2, \"AI Feedback:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.getAnswerFeedback((tmp_3_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_3_0.id));\n  }\n}\nfunction SubjectiveQAComponent_div_12_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"h4\");\n    i0.ɵɵelement(2, \"i\", 48);\n    i0.ɵɵtext(3, \" Evaluation Results \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 49)(5, \"div\", 50)(6, \"span\", 51);\n    i0.ɵɵtext(7, \"Similarity Score:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 52);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 53)(12, \"span\", 54);\n    i0.ɵɵtext(13, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 55);\n    i0.ɵɵtemplate(15, SubjectiveQAComponent_div_12_div_26_i_15_Template, 1, 0, \"i\", 20)(16, SubjectiveQAComponent_div_12_div_26_i_16_Template, 1, 0, \"i\", 21)(17, SubjectiveQAComponent_div_12_div_26_i_17_Template, 1, 0, \"i\", 22);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(19, SubjectiveQAComponent_div_12_div_26_div_19_Template, 5, 1, \"div\", 56);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_13_0;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵclassProp(\"high\", ctx_r2.getSimilarityScore((tmp_2_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_2_0.id) && ctx_r2.getSimilarityScore((tmp_2_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_2_0.id) > 0.7)(\"medium\", ctx_r2.getSimilarityScore((tmp_3_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_3_0.id) && ctx_r2.getSimilarityScore((tmp_3_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_3_0.id) > 0.4)(\"low\", ctx_r2.getSimilarityScore((tmp_4_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_4_0.id) && ctx_r2.getSimilarityScore((tmp_4_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_4_0.id) <= 0.4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 18, (ctx_r2.getSimilarityScore((tmp_5_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_5_0.id) || 0) * 100, \"1.0-0\"), \"% \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"correct\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"correct\")(\"partial\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"partial\")(\"incorrect\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"incorrect\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"correct\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"partial\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"incorrect\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"correct\" ? \"Excellent\" : ctx_r2.getAnswerStatus(ctx_r2.currentQuestionIndex) === \"partial\" ? \"Good\" : \"Needs Improvement\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getAnswerFeedback((tmp_13_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_13_0.id));\n  }\n}\nfunction SubjectiveQAComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"div\", 30)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 31)(6, \"span\", 32);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 33);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 34)(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"form\", 35)(14, \"div\", 36)(15, \"label\", 37);\n    i0.ɵɵtext(16, \"Your Answer:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"textarea\", 38);\n    i0.ɵɵtext(18, \"          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 39);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 40)(22, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function SubjectiveQAComponent_div_12_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitAnswer());\n    });\n    i0.ɵɵtemplate(23, SubjectiveQAComponent_div_12_i_23_Template, 1, 0, \"i\", 42)(24, SubjectiveQAComponent_div_12_i_24_Template, 1, 0, \"i\", 43);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(26, SubjectiveQAComponent_div_12_div_26_Template, 20, 21, \"div\", 44);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_4_0;\n    let tmp_7_0;\n    let tmp_8_0;\n    let tmp_12_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate((tmp_1_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_1_0.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate((tmp_2_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_2_0.difficulty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Question \", ctx_r2.currentQuestionIndex + 1, \" of \", ctx_r2.questions.length, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate((tmp_4_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_4_0.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.subjectiveForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"answers.\" + ctx_r2.currentQuestionIndex);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ((tmp_7_0 = ctx_r2.answersArray.at(ctx_r2.currentQuestionIndex).value) == null ? null : tmp_7_0.length) || 0, \" characters \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !((tmp_8_0 = ctx_r2.answersArray.at(ctx_r2.currentQuestionIndex).value) == null ? null : tmp_8_0.trim()) || ctx_r2.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isSubmitting ? \"Evaluating...\" : \"Submit Answer\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.evaluationResults[(tmp_12_0 = ctx_r2.getCurrentQuestion()) == null ? null : tmp_12_0.id]);\n  }\n}\nfunction SubjectiveQAComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"h4\");\n    i0.ɵɵelement(2, \"i\", 59);\n    i0.ɵɵtext(3, \" Performance Summary \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 60)(5, \"div\", 61)(6, \"div\", 62);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 63);\n    i0.ɵɵtext(9, \"Answered\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 61)(11, \"div\", 62);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 63);\n    i0.ɵɵtext(14, \"Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 61)(16, \"div\", 62);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 63);\n    i0.ɵɵtext(19, \"Correct\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r2.getCompletedQuestionsCount());\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.getProgressPercentage(), \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getCorrectAnswersCount(), \" \");\n  }\n}\nexport let SubjectiveQAComponent = /*#__PURE__*/(() => {\n  class SubjectiveQAComponent {\n    constructor(fb, interviewService) {\n      this.fb = fb;\n      this.interviewService = interviewService;\n      this.domain = '';\n      this.resumeId = '';\n      this.answersUpdate = new EventEmitter();\n      this.questions = [];\n      this.currentQuestionIndex = 0;\n      this.isSubmitting = false;\n      this.submittedAnswers = [];\n      this.evaluationResults = {};\n      this.subjectiveForm = this.fb.group({\n        answers: this.fb.array([])\n      });\n    }\n    ngOnInit() {\n      this.loadSubjectiveQuestions();\n    }\n    loadSubjectiveQuestions() {\n      this.interviewService.getSubjectiveQuestions(this.domain).subscribe({\n        next: questions => {\n          this.questions = questions;\n          this.setupForm();\n        },\n        error: error => {\n          console.error('Error loading subjective questions:', error);\n          // Fallback to dummy questions if backend is not available\n          this.loadDummyQuestions();\n        }\n      });\n    }\n    loadDummyQuestions() {\n      this.questions = [{\n        id: 'subj-1',\n        title: 'Object-Oriented Programming Concepts',\n        description: 'Explain the four fundamental principles of Object-Oriented Programming with examples.',\n        domain: this.domain,\n        difficulty: 'MEDIUM',\n        questionType: 'SUBJECTIVE'\n      }, {\n        id: 'subj-2',\n        title: 'Database Optimization',\n        description: 'Describe various database optimization techniques and when you would use each one.',\n        domain: this.domain,\n        difficulty: 'MEDIUM',\n        questionType: 'SUBJECTIVE'\n      }, {\n        id: 'subj-3',\n        title: 'RESTful API Design',\n        description: 'What are the key principles of RESTful API design? Provide examples of good and bad API design.',\n        domain: this.domain,\n        difficulty: 'MEDIUM',\n        questionType: 'SUBJECTIVE'\n      }, {\n        id: 'subj-4',\n        title: 'Error Handling Best Practices',\n        description: 'Discuss error handling best practices in software development. How do you handle exceptions in your preferred programming language?',\n        domain: this.domain,\n        difficulty: 'MEDIUM',\n        questionType: 'SUBJECTIVE'\n      }];\n      this.setupForm();\n    }\n    setupForm() {\n      const answersArray = this.subjectiveForm.get('answers');\n      answersArray.clear();\n      this.questions.forEach(() => {\n        answersArray.push(this.fb.control(''));\n      });\n    }\n    get answersArray() {\n      return this.subjectiveForm.get('answers');\n    }\n    getCurrentQuestion() {\n      return this.questions[this.currentQuestionIndex] || null;\n    }\n    // Helper methods for template\n    getCompletedQuestionsCount() {\n      return Object.keys(this.evaluationResults).length;\n    }\n    getCorrectAnswersCount() {\n      return Object.values(this.evaluationResults).filter(r => r.correct).length;\n    }\n    hasEvaluationResults() {\n      return Object.keys(this.evaluationResults).length > 0;\n    }\n    navigateToQuestion(index) {\n      if (index >= 0 && index < this.questions.length) {\n        this.currentQuestionIndex = index;\n      }\n    }\n    nextQuestion() {\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      }\n    }\n    previousQuestion() {\n      if (this.currentQuestionIndex > 0) {\n        this.currentQuestionIndex--;\n      }\n    }\n    canNavigateNext() {\n      return this.currentQuestionIndex < this.questions.length - 1;\n    }\n    canNavigatePrevious() {\n      return this.currentQuestionIndex > 0;\n    }\n    submitAnswer() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const currentQuestion = _this.getCurrentQuestion();\n        const currentAnswer = _this.answersArray.at(_this.currentQuestionIndex).value;\n        if (!currentQuestion || !currentAnswer.trim()) {\n          return;\n        }\n        _this.isSubmitting = true;\n        try {\n          const chatRequest = {\n            question: currentQuestion.description,\n            resumeId: _this.resumeId,\n            domain: _this.domain,\n            expectedAnswer: currentAnswer,\n            questionType: 'SUBJECTIVE'\n          };\n          // Send to backend for evaluation\n          const response = yield _this.interviewService.sendChatResponse(chatRequest).toPromise();\n          if (response) {\n            _this.evaluationResults[currentQuestion.id] = response;\n            // Update submitted answers\n            const answerData = {\n              questionId: currentQuestion.id,\n              question: currentQuestion.description,\n              answer: currentAnswer,\n              similarity: response.similarity,\n              correct: response.correct,\n              feedback: response.botResponse,\n              timestamp: new Date()\n            };\n            // Update or add answer\n            const existingIndex = _this.submittedAnswers.findIndex(a => a.questionId === currentQuestion.id);\n            if (existingIndex >= 0) {\n              _this.submittedAnswers[existingIndex] = answerData;\n            } else {\n              _this.submittedAnswers.push(answerData);\n            }\n            _this.answersUpdate.emit(_this.submittedAnswers);\n            // Move to next question if available\n            if (_this.canNavigateNext()) {\n              _this.nextQuestion();\n            }\n          }\n        } catch (error) {\n          console.error('Error submitting answer:', error);\n          // Still save the answer locally even if evaluation fails\n          const answerData = {\n            questionId: currentQuestion.id,\n            question: currentQuestion.description,\n            answer: currentAnswer,\n            timestamp: new Date(),\n            error: 'Evaluation failed'\n          };\n          const existingIndex = _this.submittedAnswers.findIndex(a => a.questionId === currentQuestion.id);\n          if (existingIndex >= 0) {\n            _this.submittedAnswers[existingIndex] = answerData;\n          } else {\n            _this.submittedAnswers.push(answerData);\n          }\n          _this.answersUpdate.emit(_this.submittedAnswers);\n        } finally {\n          _this.isSubmitting = false;\n        }\n      })();\n    }\n    getAnswerStatus(index) {\n      const question = this.questions[index];\n      const result = this.evaluationResults[question.id];\n      if (!result) return 'unanswered';\n      if (result.correct) return 'correct';\n      if (result.similarity && result.similarity > 0.5) return 'partial';\n      return 'incorrect';\n    }\n    getProgressPercentage() {\n      const answeredCount = Object.keys(this.evaluationResults).length;\n      return Math.round(answeredCount / this.questions.length * 100);\n    }\n    isQuestionAnswered(index) {\n      const question = this.questions[index];\n      return !!this.evaluationResults[question.id];\n    }\n    getSimilarityScore(questionId) {\n      const result = this.evaluationResults[questionId];\n      return result?.similarity || null;\n    }\n    getAnswerFeedback(questionId) {\n      const result = this.evaluationResults[questionId];\n      return result?.botResponse || null;\n    }\n    static {\n      this.ɵfac = function SubjectiveQAComponent_Factory(t) {\n        return new (t || SubjectiveQAComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.InterviewService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SubjectiveQAComponent,\n        selectors: [[\"app-subjective-qa\"]],\n        inputs: {\n          domain: \"domain\",\n          resumeId: \"resumeId\"\n        },\n        outputs: {\n          answersUpdate: \"answersUpdate\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 23,\n        vars: 11,\n        consts: [[1, \"subjective-qa-container\"], [1, \"qa-header\"], [1, \"progress-section\"], [1, \"progress-bar\"], [1, \"progress-fill\"], [1, \"progress-text\"], [1, \"question-navigation\"], [1, \"question-tabs\"], [\"class\", \"question-tab\", 3, \"active\", \"answered\", \"correct\", \"partial\", \"incorrect\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"question-content\", 4, \"ngIf\"], [1, \"navigation-controls\"], [1, \"btn\", \"btn-secondary\", \"nav-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-arrow-left\"], [1, \"question-indicator\"], [1, \"btn\", \"btn-primary\", \"nav-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-arrow-right\"], [\"class\", \"summary-section\", 4, \"ngIf\"], [1, \"question-tab\", 3, \"click\"], [1, \"tab-number\"], [1, \"tab-status\"], [\"class\", \"fas fa-check\", 4, \"ngIf\"], [\"class\", \"fas fa-minus\", 4, \"ngIf\"], [\"class\", \"fas fa-times\", 4, \"ngIf\"], [\"class\", \"fas fa-circle\", 4, \"ngIf\"], [1, \"fas\", \"fa-check\"], [1, \"fas\", \"fa-minus\"], [1, \"fas\", \"fa-times\"], [1, \"fas\", \"fa-circle\"], [1, \"question-content\"], [1, \"question-card\"], [1, \"question-header\"], [1, \"question-meta\"], [1, \"difficulty\"], [1, \"question-number\"], [1, \"question-description\"], [1, \"answer-form\", 3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"answer\"], [\"id\", \"answer\", \"placeholder\", \"Provide a detailed answer explaining your thoughts and approach...\", \"rows\", \"8\", 1, \"answer-textarea\", 3, \"formControlName\"], [1, \"character-count\"], [1, \"answer-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"submit-answer-btn\", 3, \"click\", \"disabled\"], [\"class\", \"fas fa-paper-plane\", 4, \"ngIf\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [\"class\", \"evaluation-results\", 4, \"ngIf\"], [1, \"fas\", \"fa-paper-plane\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"evaluation-results\"], [1, \"fas\", \"fa-chart-line\"], [1, \"result-summary\"], [1, \"similarity-score\"], [1, \"score-label\"], [1, \"score-value\"], [1, \"correctness\"], [1, \"correctness-label\"], [1, \"correctness-value\"], [\"class\", \"feedback\", 4, \"ngIf\"], [1, \"feedback\"], [1, \"summary-section\"], [1, \"fas\", \"fa-chart-bar\"], [1, \"summary-stats\"], [1, \"stat-card\"], [1, \"stat-value\"], [1, \"stat-label\"]],\n        template: function SubjectiveQAComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n            i0.ɵɵtext(4, \"Subjective Questions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵelement(6, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"span\", 5);\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7);\n            i0.ɵɵtemplate(11, SubjectiveQAComponent_button_11_Template, 8, 15, \"button\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, SubjectiveQAComponent_div_12_Template, 27, 13, \"div\", 9);\n            i0.ɵɵelementStart(13, \"div\", 10)(14, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function SubjectiveQAComponent_Template_button_click_14_listener() {\n              return ctx.previousQuestion();\n            });\n            i0.ɵɵelement(15, \"i\", 12);\n            i0.ɵɵtext(16, \" Previous \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\", 13);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 14);\n            i0.ɵɵlistener(\"click\", function SubjectiveQAComponent_Template_button_click_19_listener() {\n              return ctx.nextQuestion();\n            });\n            i0.ɵɵtext(20, \" Next \");\n            i0.ɵɵelement(21, \"i\", 15);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(22, SubjectiveQAComponent_div_22_Template, 20, 3, \"div\", 16);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵstyleProp(\"width\", ctx.getProgressPercentage(), \"%\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate2(\"\", ctx.getCompletedQuestionsCount(), \" of \", ctx.questions.length, \" completed\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getCurrentQuestion());\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.canNavigatePrevious());\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate2(\" \", ctx.currentQuestionIndex + 1, \" / \", ctx.questions.length, \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.canNavigateNext());\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.hasEvaluationResults());\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.DecimalPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".subjective-qa-container[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column;gap:20px}.qa-header[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 8px #0000001a}.progress-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0 0 15px;color:#333;font-size:1.5rem}.progress-bar[_ngcontent-%COMP%]{width:100%;height:8px;background:#e9ecef;border-radius:4px;overflow:hidden;margin-bottom:10px}.progress-fill[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,#4caf50,#45a049);transition:width .3s ease}.progress-text[_ngcontent-%COMP%]{font-size:14px;color:#666;font-weight:500}.question-navigation[_ngcontent-%COMP%]{background:#fff;padding:15px 20px;border-radius:12px;box-shadow:0 2px 8px #0000001a}.question-tabs[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.question-tab[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;padding:10px 15px;border:2px solid #e9ecef;background:#fff;border-radius:8px;cursor:pointer;transition:all .3s ease;font-weight:500;min-width:60px;justify-content:center}.question-tab[_ngcontent-%COMP%]:hover{border-color:#007bff;background:#f8f9fa}.question-tab.active[_ngcontent-%COMP%]{border-color:#007bff;background:#007bff;color:#fff}.question-tab.answered[_ngcontent-%COMP%]{border-color:#6c757d;background:#f8f9fa}.question-tab.correct[_ngcontent-%COMP%]{border-color:#28a745;background:#d4edda;color:#155724}.question-tab.partial[_ngcontent-%COMP%]{border-color:#ffc107;background:#fff3cd;color:#856404}.question-tab.incorrect[_ngcontent-%COMP%]{border-color:#dc3545;background:#f8d7da;color:#721c24}.tab-number[_ngcontent-%COMP%]{font-weight:600}.tab-status[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:12px}.question-content[_ngcontent-%COMP%]{flex:1;min-height:0}.question-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:30px;box-shadow:0 2px 8px #0000001a;height:100%;display:flex;flex-direction:column}.question-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:20px;padding-bottom:15px;border-bottom:2px solid #f0f0f0}.question-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0;color:#333;font-size:1.5rem;line-height:1.3;flex:1}.question-meta[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;gap:5px}.difficulty[_ngcontent-%COMP%]{background:#007bff;color:#fff;padding:4px 12px;border-radius:15px;font-size:12px;font-weight:500;text-transform:uppercase}.question-number[_ngcontent-%COMP%]{font-size:14px;color:#666;font-weight:500}.question-description[_ngcontent-%COMP%]{margin-bottom:25px;padding:20px;background:#f8f9fa;border-radius:8px;border-left:4px solid #007bff}.question-description[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;line-height:1.6;color:#555;font-size:16px}.answer-form[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column}.form-group[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;margin-bottom:20px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:10px;font-weight:600;color:#333;font-size:16px}.answer-textarea[_ngcontent-%COMP%]{flex:1;min-height:200px;padding:15px;border:2px solid #e9ecef;border-radius:8px;font-size:14px;line-height:1.5;resize:vertical;font-family:inherit}.answer-textarea[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 3px #007bff1a}.character-count[_ngcontent-%COMP%]{text-align:right;margin-top:8px;font-size:12px;color:#666}.answer-actions[_ngcontent-%COMP%]{text-align:center;margin-top:20px}.submit-answer-btn[_ngcontent-%COMP%]{padding:12px 30px;font-size:16px;font-weight:600;background:#28a745;color:#fff;border:none;border-radius:8px;cursor:pointer;transition:all .3s ease;display:inline-flex;align-items:center;gap:8px}.submit-answer-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#218838;transform:translateY(-2px);box-shadow:0 4px 12px #28a7454d}.submit-answer-btn[_ngcontent-%COMP%]:disabled{background:#ccc;cursor:not-allowed;transform:none;box-shadow:none}.evaluation-results[_ngcontent-%COMP%]{margin-top:25px;padding:20px;background:#f8f9fa;border-radius:8px;border:1px solid #e9ecef}.evaluation-results[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin:0 0 15px;color:#333;display:flex;align-items:center;gap:8px}.result-summary[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:20px;margin-bottom:15px}.similarity-score[_ngcontent-%COMP%], .correctness[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px}.score-label[_ngcontent-%COMP%], .correctness-label[_ngcontent-%COMP%]{font-weight:600;color:#333}.score-value[_ngcontent-%COMP%]{padding:6px 12px;border-radius:15px;font-weight:600;font-size:14px}.score-value.high[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.score-value.medium[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.score-value.low[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.correctness-value[_ngcontent-%COMP%]{display:flex;align-items:center;gap:6px;padding:6px 12px;border-radius:15px;font-weight:600;font-size:14px}.correctness-value.correct[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.correctness-value.partial[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.correctness-value.incorrect[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.feedback[_ngcontent-%COMP%]{margin-top:15px;padding:15px;background:#fff;border-radius:8px;border-left:4px solid #007bff}.feedback[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{margin:0 0 10px;color:#333;font-size:14px;font-weight:600}.feedback[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;line-height:1.5;color:#555}.navigation-controls[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:15px 20px;border-radius:12px;box-shadow:0 2px 8px #0000001a}.nav-btn[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;padding:10px 20px;border:2px solid;border-radius:8px;font-weight:500;cursor:pointer;transition:all .3s ease}.nav-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.question-indicator[_ngcontent-%COMP%]{font-weight:600;color:#333;background:#f8f9fa;padding:8px 16px;border-radius:20px;font-size:14px}.summary-section[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 8px #0000001a}.summary-section[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin:0 0 20px;color:#333;display:flex;align-items:center;gap:8px}.summary-stats[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:15px}.stat-card[_ngcontent-%COMP%]{text-align:center;padding:15px;background:#f8f9fa;border-radius:8px;border:1px solid #e9ecef}.stat-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#007bff;margin-bottom:5px}.stat-label[_ngcontent-%COMP%]{font-size:12px;color:#666;font-weight:500;text-transform:uppercase}@media (max-width: 768px){.question-header[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:15px}.question-meta[_ngcontent-%COMP%]{flex-direction:row;align-items:center;gap:10px}.result-summary[_ngcontent-%COMP%]{grid-template-columns:1fr}.navigation-controls[_ngcontent-%COMP%]{flex-direction:column;gap:15px}.question-tabs[_ngcontent-%COMP%]{justify-content:center}.summary-stats[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}\"]\n      });\n    }\n  }\n  return SubjectiveQAComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}