{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction SubjectiveQAComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"label\", 7);\n    i0.ɵɵtext(5, \"Your Answer:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"textarea\", 8);\n    i0.ɵɵtext(7, \"      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9)(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function SubjectiveQAComponent_div_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearAnswer());\n    });\n    i0.ɵɵelement(10, \"i\", 11);\n    i0.ɵɵtext(11, \" Clear Answer \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_1_0 = ctx_r1.getCurrentQuestion()) == null ? null : tmp_1_0.question, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.answerControl);\n  }\n}\nfunction SubjectiveQAComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵelement(2, \"i\", 14);\n    i0.ɵɵelementStart(3, \"h3\");\n    i0.ɵɵtext(4, \"No Questions Available\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Please check back later or contact support.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SubjectiveQAComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"span\", 17);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.getAnsweredCount(), \" of \", ctx_r1.getTotalQuestions(), \" questions answered\");\n  }\n}\nexport class SubjectiveQAComponent {\n  constructor() {\n    this.domain = '';\n    this.resumeId = '';\n    this.currentQuestionIndex = 0;\n    this.answersUpdate = new EventEmitter();\n    this.questions = [];\n    this.answerControl = new FormControl('');\n    this.answers = [];\n  }\n  ngOnInit() {\n    this.loadQuestions();\n    this.setupAnswerControl();\n  }\n  ngOnChanges() {\n    // When question index changes, update the answer control\n    this.updateAnswerControl();\n  }\n  loadQuestions() {\n    // Simple demo questions - in real app, fetch from backend\n    this.questions = [{\n      id: 'subj_1',\n      question: 'Explain the difference between synchronous and asynchronous programming. Provide examples of when you would use each approach.',\n      domain: this.domain || 'Software Development',\n      experienceLevel: 'intermediate'\n    }, {\n      id: 'subj_2',\n      question: 'Describe your experience with database optimization. What techniques have you used to improve query performance?',\n      domain: this.domain || 'Software Development',\n      experienceLevel: 'intermediate'\n    }, {\n      id: 'subj_3',\n      question: 'How do you approach debugging a complex issue in a production environment? Walk through your process.',\n      domain: this.domain || 'Software Development',\n      experienceLevel: 'intermediate'\n    }, {\n      id: 'subj_4',\n      question: 'Explain the concept of microservices architecture. What are the benefits and challenges of implementing microservices?',\n      domain: this.domain || 'Software Development',\n      experienceLevel: 'senior'\n    }];\n  }\n  setupAnswerControl() {\n    this.answerControl.valueChanges.subscribe(value => {\n      this.saveCurrentAnswer(value || '');\n    });\n  }\n  updateAnswerControl() {\n    const currentQuestion = this.getCurrentQuestion();\n    if (currentQuestion) {\n      const existingAnswer = this.answers.find(a => a.questionId === currentQuestion.id);\n      this.answerControl.setValue(existingAnswer?.answer || '', {\n        emitEvent: false\n      });\n    }\n  }\n  getCurrentQuestion() {\n    return this.questions[this.currentQuestionIndex] || null;\n  }\n  saveCurrentAnswer(answer) {\n    const currentQuestion = this.getCurrentQuestion();\n    if (currentQuestion) {\n      const existingIndex = this.answers.findIndex(a => a.questionId === currentQuestion.id);\n      const answerData = {\n        questionId: currentQuestion.id,\n        answer: answer\n      };\n      if (existingIndex >= 0) {\n        this.answers[existingIndex] = answerData;\n      } else {\n        this.answers.push(answerData);\n      }\n      this.answersUpdate.emit(this.answers);\n    }\n  }\n  clearAnswer() {\n    this.answerControl.setValue('');\n  }\n  getAnsweredCount() {\n    return this.answers.filter(a => a.answer.trim().length > 0).length;\n  }\n  getTotalQuestions() {\n    return this.questions.length;\n  }\n  static {\n    this.ɵfac = function SubjectiveQAComponent_Factory(t) {\n      return new (t || SubjectiveQAComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SubjectiveQAComponent,\n      selectors: [[\"app-subjective-qa\"]],\n      inputs: {\n        domain: \"domain\",\n        resumeId: \"resumeId\",\n        currentQuestionIndex: \"currentQuestionIndex\"\n      },\n      outputs: {\n        answersUpdate: \"answersUpdate\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 3,\n      consts: [[1, \"subjective-qa-container\"], [\"class\", \"question-display\", 4, \"ngIf\"], [\"class\", \"no-questions\", 4, \"ngIf\"], [\"class\", \"progress-info\", 4, \"ngIf\"], [1, \"question-display\"], [1, \"question-text\"], [1, \"answer-section\"], [\"for\", \"answer-textarea\"], [\"id\", \"answer-textarea\", \"placeholder\", \"Type your detailed answer here...\", \"rows\", \"8\", 1, \"answer-textarea\", 3, \"formControl\"], [1, \"answer-actions\"], [\"type\", \"button\", 1, \"clear-btn\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [1, \"no-questions\"], [1, \"no-questions-content\"], [1, \"fas\", \"fa-question-circle\"], [1, \"progress-info\"], [1, \"progress-text\"], [1, \"answered\"]],\n      template: function SubjectiveQAComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, SubjectiveQAComponent_div_1_Template, 12, 2, \"div\", 1)(2, SubjectiveQAComponent_div_2_Template, 7, 0, \"div\", 2)(3, SubjectiveQAComponent_div_3_Template, 4, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.getCurrentQuestion());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.getCurrentQuestion());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.getTotalQuestions() > 0);\n        }\n      },\n      dependencies: [CommonModule, i1.NgIf, ReactiveFormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n      styles: [\".subjective-qa-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n}\\n\\n\\n\\n.qa-header[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 12px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.progress-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0 0 15px 0;\\n  color: #333;\\n  font-size: 1.5rem;\\n}\\n\\n.progress-bar[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 8px;\\n  background: #e9ecef;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  margin-bottom: 10px;\\n}\\n\\n.progress-fill[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: linear-gradient(90deg, #4CAF50, #45a049);\\n  transition: width 0.3s ease;\\n}\\n\\n.progress-text[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n  font-weight: 500;\\n}\\n\\n\\n\\n.question-navigation[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 12px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.question-tabs[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  flex-wrap: wrap;\\n}\\n\\n.question-tab[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  padding: 10px 15px;\\n  border: 2px solid #e9ecef;\\n  background: white;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  font-weight: 500;\\n  min-width: 60px;\\n  justify-content: center;\\n}\\n\\n.question-tab[_ngcontent-%COMP%]:hover {\\n  border-color: #007bff;\\n  background: #f8f9fa;\\n}\\n\\n.question-tab.active[_ngcontent-%COMP%] {\\n  border-color: #007bff;\\n  background: #007bff;\\n  color: white;\\n}\\n\\n.question-tab.answered[_ngcontent-%COMP%] {\\n  border-color: #6c757d;\\n  background: #f8f9fa;\\n}\\n\\n.question-tab.correct[_ngcontent-%COMP%] {\\n  border-color: #28a745;\\n  background: #d4edda;\\n  color: #155724;\\n}\\n\\n.question-tab.partial[_ngcontent-%COMP%] {\\n  border-color: #ffc107;\\n  background: #fff3cd;\\n  color: #856404;\\n}\\n\\n.question-tab.incorrect[_ngcontent-%COMP%] {\\n  border-color: #dc3545;\\n  background: #f8d7da;\\n  color: #721c24;\\n}\\n\\n.tab-number[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n\\n.tab-status[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n}\\n\\n\\n\\n.question-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-height: 0;\\n}\\n\\n.question-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 12px;\\n  padding: 30px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.question-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n  margin-bottom: 20px;\\n  padding-bottom: 15px;\\n  border-bottom: 2px solid #f0f0f0;\\n}\\n\\n.question-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #333;\\n  font-size: 1.5rem;\\n  line-height: 1.3;\\n  flex: 1;\\n}\\n\\n.question-meta[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  gap: 5px;\\n}\\n\\n.difficulty[_ngcontent-%COMP%] {\\n  background: #007bff;\\n  color: white;\\n  padding: 4px 12px;\\n  border-radius: 15px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  text-transform: uppercase;\\n}\\n\\n.question-number[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n  font-weight: 500;\\n}\\n\\n.question-description[_ngcontent-%COMP%] {\\n  margin-bottom: 25px;\\n  padding: 20px;\\n  background: #f8f9fa;\\n  border-radius: 8px;\\n  border-left: 4px solid #007bff;\\n}\\n\\n.question-description[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  line-height: 1.6;\\n  color: #555;\\n  font-size: 16px;\\n}\\n\\n\\n\\n.answer-form[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  font-weight: 600;\\n  color: #333;\\n  font-size: 16px;\\n}\\n\\n.answer-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-height: 200px;\\n  padding: 15px;\\n  border: 2px solid #e9ecef;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  line-height: 1.5;\\n  resize: vertical;\\n  font-family: inherit;\\n}\\n\\n.answer-textarea[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\\n}\\n\\n.character-count[_ngcontent-%COMP%] {\\n  text-align: right;\\n  margin-top: 8px;\\n  font-size: 12px;\\n  color: #666;\\n}\\n\\n.answer-actions[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.submit-answer-btn[_ngcontent-%COMP%] {\\n  padding: 12px 30px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  background: #28a745;\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n.submit-answer-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background: #218838;\\n  transform: translateY(-2px);\\n  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);\\n}\\n\\n.submit-answer-btn[_ngcontent-%COMP%]:disabled {\\n  background: #ccc;\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: none;\\n}\\n\\n\\n\\n.evaluation-results[_ngcontent-%COMP%] {\\n  margin-top: 25px;\\n  padding: 20px;\\n  background: #f8f9fa;\\n  border-radius: 8px;\\n  border: 1px solid #e9ecef;\\n}\\n\\n.evaluation-results[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 15px 0;\\n  color: #333;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n.result-summary[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 20px;\\n  margin-bottom: 15px;\\n}\\n\\n.similarity-score[_ngcontent-%COMP%], .correctness[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.score-label[_ngcontent-%COMP%], .correctness-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #333;\\n}\\n\\n.score-value[_ngcontent-%COMP%] {\\n  padding: 6px 12px;\\n  border-radius: 15px;\\n  font-weight: 600;\\n  font-size: 14px;\\n}\\n\\n.score-value.high[_ngcontent-%COMP%] {\\n  background: #d4edda;\\n  color: #155724;\\n}\\n\\n.score-value.medium[_ngcontent-%COMP%] {\\n  background: #fff3cd;\\n  color: #856404;\\n}\\n\\n.score-value.low[_ngcontent-%COMP%] {\\n  background: #f8d7da;\\n  color: #721c24;\\n}\\n\\n.correctness-value[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  padding: 6px 12px;\\n  border-radius: 15px;\\n  font-weight: 600;\\n  font-size: 14px;\\n}\\n\\n.correctness-value.correct[_ngcontent-%COMP%] {\\n  background: #d4edda;\\n  color: #155724;\\n}\\n\\n.correctness-value.partial[_ngcontent-%COMP%] {\\n  background: #fff3cd;\\n  color: #856404;\\n}\\n\\n.correctness-value.incorrect[_ngcontent-%COMP%] {\\n  background: #f8d7da;\\n  color: #721c24;\\n}\\n\\n.feedback[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  padding: 15px;\\n  background: white;\\n  border-radius: 8px;\\n  border-left: 4px solid #007bff;\\n}\\n\\n.feedback[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  margin: 0 0 10px 0;\\n  color: #333;\\n  font-size: 14px;\\n  font-weight: 600;\\n}\\n\\n.feedback[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  line-height: 1.5;\\n  color: #555;\\n}\\n\\n\\n\\n.simple-status[_ngcontent-%COMP%] {\\n  margin: 20px 0;\\n  padding: 15px;\\n  background: #f8f9fa;\\n  border-radius: 8px;\\n  border-left: 4px solid #007bff;\\n}\\n\\n.status-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n  align-items: center;\\n  flex-wrap: wrap;\\n}\\n\\n.answered-count[_ngcontent-%COMP%], .correct-count[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #495057;\\n  font-weight: 500;\\n}\\n\\n.correct-count[_ngcontent-%COMP%] {\\n  color: #28a745;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .question-header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 15px;\\n  }\\n  \\n  .question-meta[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n    align-items: center;\\n    gap: 10px;\\n  }\\n  \\n  .result-summary[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .question-tabs[_ngcontent-%COMP%] {\\n    justify-content: center;\\n  }\\n  \\n  .status-info[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 10px;\\n  }\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdWJqZWN0aXZlLXFhL3N1YmplY3RpdmUtcWEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQSx5QkFBeUI7QUFDekI7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix3Q0FBd0M7QUFDMUM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLG9EQUFvRDtFQUNwRCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQSx3QkFBd0I7QUFDeEI7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQix3Q0FBd0M7QUFDMUM7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsU0FBUztFQUNULGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25C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QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zdWJqZWN0aXZlLXFhLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbi8qIEhlYWRlciB3aXRoIFByb2dyZXNzICovXHJcbi5xYS1oZWFkZXIge1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4ucHJvZ3Jlc3Mtc2VjdGlvbiBoMyB7XHJcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xyXG4gIGNvbG9yOiAjMzMzO1xyXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xyXG59XHJcblxyXG4ucHJvZ3Jlc3MtYmFyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDhweDtcclxuICBiYWNrZ3JvdW5kOiAjZTllY2VmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5wcm9ncmVzcy1maWxsIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjNENBRjUwLCAjNDVhMDQ5KTtcclxuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5wcm9ncmVzcy10ZXh0IHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLyogUXVlc3Rpb24gTmF2aWdhdGlvbiAqL1xyXG4ucXVlc3Rpb24tbmF2aWdhdGlvbiB7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgcGFkZGluZzogMTVweCAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLnF1ZXN0aW9uLXRhYnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuLnF1ZXN0aW9uLXRhYiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogOHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjZTllY2VmO1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIG1pbi13aWR0aDogNjBweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnF1ZXN0aW9uLXRhYjpob3ZlciB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGJhY2tncm91bmQ6ICNmOGY5ZmE7XHJcbn1cclxuXHJcbi5xdWVzdGlvbi10YWIuYWN0aXZlIHtcclxuICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbiAgYmFja2dyb3VuZDogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5xdWVzdGlvbi10YWIuYW5zd2VyZWQge1xyXG4gIGJvcmRlci1jb2xvcjogIzZjNzU3ZDtcclxuICBiYWNrZ3JvdW5kOiAjZjhmOWZhO1xyXG59XHJcblxyXG4ucXVlc3Rpb24tdGFiLmNvcnJlY3Qge1xyXG4gIGJvcmRlci1jb2xvcjogIzI4YTc0NTtcclxuICBiYWNrZ3JvdW5kOiAjZDRlZGRhO1xyXG4gIGNvbG9yOiAjMTU1NzI0O1xyXG59XHJcblxyXG4ucXVlc3Rpb24tdGFiLnBhcnRpYWwge1xyXG4gIGJvcmRlci1jb2xvcjogI2ZmYzEwNztcclxuICBiYWNrZ3JvdW5kOiAjZmZmM2NkO1xyXG4gIGNvbG9yOiAjODU2NDA0O1xyXG59XHJcblxyXG4ucXVlc3Rpb24tdGFiLmluY29ycmVjdCB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xyXG4gIGJhY2tncm91bmQ6ICNmOGQ3ZGE7XHJcbiAgY29sb3I6ICM3MjFjMjQ7XHJcbn1cclxuXHJcbi50YWItbnVtYmVyIHtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4udGFiLXN0YXR1cyBpIHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi8qIFF1ZXN0aW9uIENvbnRlbnQgKi9cclxuLnF1ZXN0aW9uLWNvbnRlbnQge1xyXG4gIGZsZXg6IDE7XHJcbiAgbWluLWhlaWdodDogMDtcclxufVxyXG5cclxuLnF1ZXN0aW9uLWNhcmQge1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgcGFkZGluZzogMzBweDtcclxuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5xdWVzdGlvbi1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNmMGYwZjA7XHJcbn1cclxuXHJcbi5xdWVzdGlvbi1oZWFkZXIgaDIge1xyXG4gIG1hcmdpbjogMDtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBsaW5lLWhlaWdodDogMS4zO1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5xdWVzdGlvbi1tZXRhIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gIGdhcDogNXB4O1xyXG59XHJcblxyXG4uZGlmZmljdWx0eSB7XHJcbiAgYmFja2dyb3VuZDogIzAwN2JmZjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogNHB4IDEycHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4ucXVlc3Rpb24tbnVtYmVyIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLnF1ZXN0aW9uLWRlc2NyaXB0aW9uIHtcclxuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjMDA3YmZmO1xyXG59XHJcblxyXG4ucXVlc3Rpb24tZGVzY3JpcHRpb24gcCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgY29sb3I6ICM1NTU7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4vKiBBbnN3ZXIgRm9ybSAqL1xyXG4uYW5zd2VyLWZvcm0ge1xyXG4gIGZsZXg6IDE7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgZmxleDogMTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbi5hbnN3ZXItdGV4dGFyZWEge1xyXG4gIGZsZXg6IDE7XHJcbiAgbWluLWhlaWdodDogMjAwcHg7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjZTllY2VmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICByZXNpemU6IHZlcnRpY2FsO1xyXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG59XHJcblxyXG4uYW5zd2VyLXRleHRhcmVhOmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcclxuICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgwLCAxMjMsIDI1NSwgMC4xKTtcclxufVxyXG5cclxuLmNoYXJhY3Rlci1jb3VudCB7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBjb2xvcjogIzY2NjtcclxufVxyXG5cclxuLmFuc3dlci1hY3Rpb25zIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLnN1Ym1pdC1hbnN3ZXItYnRuIHtcclxuICBwYWRkaW5nOiAxMnB4IDMwcHg7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgYmFja2dyb3VuZDogIzI4YTc0NTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogOHB4O1xyXG59XHJcblxyXG4uc3VibWl0LWFuc3dlci1idG46aG92ZXI6bm90KDpkaXNhYmxlZCkge1xyXG4gIGJhY2tncm91bmQ6ICMyMTg4Mzg7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSg0MCwgMTY3LCA2OSwgMC4zKTtcclxufVxyXG5cclxuLnN1Ym1pdC1hbnN3ZXItYnRuOmRpc2FibGVkIHtcclxuICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgdHJhbnNmb3JtOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbi8qIEV2YWx1YXRpb24gUmVzdWx0cyAqL1xyXG4uZXZhbHVhdGlvbi1yZXN1bHRzIHtcclxuICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2U5ZWNlZjtcclxufVxyXG5cclxuLmV2YWx1YXRpb24tcmVzdWx0cyBoNCB7XHJcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xyXG4gIGNvbG9yOiAjMzMzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDhweDtcclxufVxyXG5cclxuLnJlc3VsdC1zdW1tYXJ5IHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICBnYXA6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG5cclxuLnNpbWlsYXJpdHktc2NvcmUsXHJcbi5jb3JyZWN0bmVzcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogMTBweDtcclxufVxyXG5cclxuLnNjb3JlLWxhYmVsLFxyXG4uY29ycmVjdG5lc3MtbGFiZWwge1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5zY29yZS12YWx1ZSB7XHJcbiAgcGFkZGluZzogNnB4IDEycHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnNjb3JlLXZhbHVlLmhpZ2gge1xyXG4gIGJhY2tncm91bmQ6ICNkNGVkZGE7XHJcbiAgY29sb3I6ICMxNTU3MjQ7XHJcbn1cclxuXHJcbi5zY29yZS12YWx1ZS5tZWRpdW0ge1xyXG4gIGJhY2tncm91bmQ6ICNmZmYzY2Q7XHJcbiAgY29sb3I6ICM4NTY0MDQ7XHJcbn1cclxuXHJcbi5zY29yZS12YWx1ZS5sb3cge1xyXG4gIGJhY2tncm91bmQ6ICNmOGQ3ZGE7XHJcbiAgY29sb3I6ICM3MjFjMjQ7XHJcbn1cclxuXHJcbi5jb3JyZWN0bmVzcy12YWx1ZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogNnB4O1xyXG4gIHBhZGRpbmc6IDZweCAxMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5jb3JyZWN0bmVzcy12YWx1ZS5jb3JyZWN0IHtcclxuICBiYWNrZ3JvdW5kOiAjZDRlZGRhO1xyXG4gIGNvbG9yOiAjMTU1NzI0O1xyXG59XHJcblxyXG4uY29ycmVjdG5lc3MtdmFsdWUucGFydGlhbCB7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjNjZDtcclxuICBjb2xvcjogIzg1NjQwNDtcclxufVxyXG5cclxuLmNvcnJlY3RuZXNzLXZhbHVlLmluY29ycmVjdCB7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZDdkYTtcclxuICBjb2xvcjogIzcyMWMyNDtcclxufVxyXG5cclxuLmZlZWRiYWNrIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJvcmRlci1sZWZ0OiA0cHggc29saWQgIzAwN2JmZjtcclxufVxyXG5cclxuLmZlZWRiYWNrIGg1IHtcclxuICBtYXJnaW46IDAgMCAxMHB4IDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5mZWVkYmFjayBwIHtcclxuICBtYXJnaW46IDA7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICBjb2xvcjogIzU1NTtcclxufVxyXG5cclxuLyogU2ltcGxlIFN0YXR1cyAqL1xyXG4uc2ltcGxlLXN0YXR1cyB7XHJcbiAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBiYWNrZ3JvdW5kOiAjZjhmOWZhO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICMwMDdiZmY7XHJcbn1cclxuXHJcbi5zdGF0dXMtaW5mbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6IDIwcHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi5hbnN3ZXJlZC1jb3VudCwgLmNvcnJlY3QtY291bnQge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBjb2xvcjogIzQ5NTA1NztcclxuICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcblxyXG4uY29ycmVjdC1jb3VudCB7XHJcbiAgY29sb3I6ICMyOGE3NDU7XHJcbn1cclxuXHJcbi8qIFJlc3BvbnNpdmUgRGVzaWduICovXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5xdWVzdGlvbi1oZWFkZXIge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgZ2FwOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24tbWV0YSB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLnJlc3VsdC1zdW1tYXJ5IHtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24tdGFicyB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLnN0YXR1cy1pbmZvIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIGdhcDogMTBweDtcclxuICB9XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","CommonModule","ReactiveFormsModule","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SubjectiveQAComponent_div_1_Template_button_click_9_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","clearAnswer","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","tmp_1_0","getCurrentQuestion","question","ɵɵproperty","answerControl","ɵɵtextInterpolate2","getAnsweredCount","getTotalQuestions","SubjectiveQAComponent","constructor","domain","resumeId","currentQuestionIndex","answersUpdate","questions","answers","ngOnInit","loadQuestions","setupAnswerControl","ngOnChanges","updateAnswerControl","id","experienceLevel","valueChanges","subscribe","value","saveCurrentAnswer","currentQuestion","existingAnswer","find","a","questionId","setValue","answer","emitEvent","existingIndex","findIndex","answerData","push","emit","filter","trim","length","selectors","inputs","outputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","SubjectiveQAComponent_Template","rf","ctx","ɵɵtemplate","SubjectiveQAComponent_div_1_Template","SubjectiveQAComponent_div_2_Template","SubjectiveQAComponent_div_3_Template","i1","NgIf","i2","DefaultValueAccessor","NgControlStatus","FormControlDirective","styles"],"sources":["C:\\Frontend\\src\\app\\components\\subjective-qa\\subjective-qa.component.ts","C:\\Frontend\\src\\app\\components\\subjective-qa\\subjective-qa.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormControl } from '@angular/forms';\r\n\r\ninterface SubjectiveQuestion {\r\n  id: string;\r\n  question: string;\r\n  domain: string;\r\n  experienceLevel: string;\r\n}\r\n\r\ninterface SubjectiveAnswer {\r\n  questionId: string;\r\n  answer: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-subjective-qa',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './subjective-qa.component.html',\r\n  styleUrls: ['./subjective-qa.component.css']\r\n})\r\nexport class SubjectiveQAComponent implements OnInit {\r\n  @Input() domain: string = '';\r\n  @Input() resumeId: string = '';\r\n  @Input() currentQuestionIndex: number = 0;\r\n  @Output() answersUpdate = new EventEmitter<SubjectiveAnswer[]>();\r\n\r\n  questions: SubjectiveQuestion[] = [];\r\n  answerControl = new FormControl('');\r\n  answers: SubjectiveAnswer[] = [];\r\n\r\n  ngOnInit() {\r\n    this.loadQuestions();\r\n    this.setupAnswerControl();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // When question index changes, update the answer control\r\n    this.updateAnswerControl();\r\n  }\r\n\r\n  private loadQuestions() {\r\n    // Simple demo questions - in real app, fetch from backend\r\n    this.questions = [\r\n      {\r\n        id: 'subj_1',\r\n        question: 'Explain the difference between synchronous and asynchronous programming. Provide examples of when you would use each approach.',\r\n        domain: this.domain || 'Software Development',\r\n        experienceLevel: 'intermediate'\r\n      },\r\n      {\r\n        id: 'subj_2', \r\n        question: 'Describe your experience with database optimization. What techniques have you used to improve query performance?',\r\n        domain: this.domain || 'Software Development',\r\n        experienceLevel: 'intermediate'\r\n      },\r\n      {\r\n        id: 'subj_3',\r\n        question: 'How do you approach debugging a complex issue in a production environment? Walk through your process.',\r\n        domain: this.domain || 'Software Development', \r\n        experienceLevel: 'intermediate'\r\n      },\r\n      {\r\n        id: 'subj_4',\r\n        question: 'Explain the concept of microservices architecture. What are the benefits and challenges of implementing microservices?',\r\n        domain: this.domain || 'Software Development',\r\n        experienceLevel: 'senior'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private setupAnswerControl() {\r\n    this.answerControl.valueChanges.subscribe(value => {\r\n      this.saveCurrentAnswer(value || '');\r\n    });\r\n  }\r\n\r\n  private updateAnswerControl() {\r\n    const currentQuestion = this.getCurrentQuestion();\r\n    if (currentQuestion) {\r\n      const existingAnswer = this.answers.find(a => a.questionId === currentQuestion.id);\r\n      this.answerControl.setValue(existingAnswer?.answer || '', { emitEvent: false });\r\n    }\r\n  }\r\n\r\n  getCurrentQuestion(): SubjectiveQuestion | null {\r\n    return this.questions[this.currentQuestionIndex] || null;\r\n  }\r\n\r\n  private saveCurrentAnswer(answer: string) {\r\n    const currentQuestion = this.getCurrentQuestion();\r\n    if (currentQuestion) {\r\n      const existingIndex = this.answers.findIndex(a => a.questionId === currentQuestion.id);\r\n      const answerData: SubjectiveAnswer = {\r\n        questionId: currentQuestion.id,\r\n        answer: answer\r\n      };\r\n\r\n      if (existingIndex >= 0) {\r\n        this.answers[existingIndex] = answerData;\r\n      } else {\r\n        this.answers.push(answerData);\r\n      }\r\n\r\n      this.answersUpdate.emit(this.answers);\r\n    }\r\n  }\r\n\r\n  clearAnswer() {\r\n    this.answerControl.setValue('');\r\n  }\r\n\r\n  getAnsweredCount(): number {\r\n    return this.answers.filter(a => a.answer.trim().length > 0).length;\r\n  }\r\n\r\n  getTotalQuestions(): number {\r\n    return this.questions.length;\r\n  }\r\n} ","<div class=\"subjective-qa-container\">\r\n  <!-- Current Question Display -->\r\n  <div *ngIf=\"getCurrentQuestion()\" class=\"question-display\">\r\n    <div class=\"question-text\">\r\n      {{ getCurrentQuestion()?.question }}\r\n    </div>\r\n    \r\n    <!-- Answer Input -->\r\n    <div class=\"answer-section\">\r\n      <label for=\"answer-textarea\">Your Answer:</label>\r\n      <textarea \r\n        id=\"answer-textarea\"\r\n        [formControl]=\"answerControl\"\r\n        class=\"answer-textarea\"\r\n        placeholder=\"Type your detailed answer here...\"\r\n        rows=\"8\">\r\n      </textarea>\r\n      \r\n      <!-- Action Button -->\r\n      <div class=\"answer-actions\">\r\n        <button \r\n          class=\"clear-btn\"\r\n          (click)=\"clearAnswer()\"\r\n          type=\"button\">\r\n          <i class=\"fas fa-times\"></i>\r\n          Clear Answer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- No Questions State -->\r\n  <div *ngIf=\"!getCurrentQuestion()\" class=\"no-questions\">\r\n    <div class=\"no-questions-content\">\r\n      <i class=\"fas fa-question-circle\"></i>\r\n      <h3>No Questions Available</h3>\r\n      <p>Please check back later or contact support.</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Simple Progress Info -->\r\n  <div class=\"progress-info\" *ngIf=\"getTotalQuestions() > 0\">\r\n    <div class=\"progress-text\">\r\n      <span class=\"answered\">{{ getAnsweredCount() }} of {{ getTotalQuestions() }} questions answered</span>\r\n    </div>\r\n  </div>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}