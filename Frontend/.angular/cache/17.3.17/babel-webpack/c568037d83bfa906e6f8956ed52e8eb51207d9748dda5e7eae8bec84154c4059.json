{"ast":null,"code":"import _asyncToGenerator from \"C:/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { SubjectiveQAComponent } from '../subjective-qa/subjective-qa.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/interview.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction InterviewTestPageComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.candidateInfo.name, \" | \", ctx_r1.candidateInfo.domain, \" \");\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_33_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 37)(6, \"label\");\n    i0.ɵɵtext(7, \"Your Solution:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"textarea\", 38);\n    i0.ɵɵtext(9, \"            \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.currentCodingQuestion.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentCodingQuestion.description, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.codingForm);\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, InterviewTestPageComponent_div_0_div_33_div_4_Template, 10, 3, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Question \", ctx_r1.currentCodingIndex + 1, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentCodingQuestion);\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_34_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_3_0 = ctx_r1.getCurrentMCQQuestion()) == null ? null : tmp_3_0.description, \" \");\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, InterviewTestPageComponent_div_0_div_34_div_4_Template, 3, 1, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Question \", ctx_r1.currentMCQIndex + 1, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getCurrentMCQQuestion());\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 35)(5, \"app-subjective-qa\", 39);\n    i0.ɵɵlistener(\"answersUpdate\", function InterviewTestPageComponent_div_0_div_35_Template_app_subjective_qa_answersUpdate_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onSubjectiveAnswersUpdate($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Question \", ctx_r1.currentSubjectiveIndex + 1, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"domain\", (ctx_r1.candidateInfo == null ? null : ctx_r1.candidateInfo.domain) || \"\")(\"resumeId\", ctx_r1.resumeId)(\"currentQuestionIndex\", ctx_r1.currentSubjectiveIndex);\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_37_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"input\", 49);\n    i0.ɵɵlistener(\"change\", function InterviewTestPageComponent_div_0_div_37_ng_container_5_div_1_Template_input_change_1_listener() {\n      const option_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.selectSingleOption(option_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 50);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_7_0;\n    const option_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"option_\" + i_r7)(\"name\", \"mcq_\" + ((tmp_7_0 = ctx_r1.getCurrentMCQQuestion()) == null ? null : tmp_7_0.id))(\"value\", option_r6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"option_\" + i_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(option_r6);\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_37_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InterviewTestPageComponent_div_0_div_37_ng_container_5_div_1_Template, 4, 5, \"div\", 47);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getCurrentMCQOptions());\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_37_ng_container_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"input\", 52);\n    i0.ɵɵlistener(\"change\", function InterviewTestPageComponent_div_0_div_37_ng_container_6_div_1_Template_input_change_1_listener($event) {\n      const option_r9 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.toggleMultipleOption(option_r9, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 50);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", \"option_\" + i_r10)(\"value\", option_r9);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"option_\" + i_r10);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(option_r9);\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_37_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InterviewTestPageComponent_div_0_div_37_ng_container_6_div_1_Template, 4, 4, \"div\", 47);\n    i0.ɵɵelementStart(2, \"small\", 51);\n    i0.ɵɵtext(3, \"Select all that apply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getCurrentMCQOptions());\n  }\n}\nfunction InterviewTestPageComponent_div_0_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"h4\");\n    i0.ɵɵtext(2, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 41)(4, \"div\", 42);\n    i0.ɵɵtemplate(5, InterviewTestPageComponent_div_0_div_37_ng_container_5_Template, 2, 1, \"ng-container\", 43)(6, InterviewTestPageComponent_div_0_div_37_ng_container_6_Template, 4, 1, \"ng-container\", 43);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 44)(8, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_div_37_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.clearCurrentMCQResponse());\n    });\n    i0.ɵɵelement(9, \"i\", 46);\n    i0.ɵɵtext(10, \" Clear Response \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx_r1.getCurrentMCQQuestion()) == null ? null : tmp_2_0.multipleSelection));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r1.getCurrentMCQQuestion()) == null ? null : tmp_3_0.multipleSelection);\n  }\n}\nfunction InterviewTestPageComponent_div_0_i_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 53);\n  }\n}\nfunction InterviewTestPageComponent_div_0_i_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 54);\n  }\n}\nfunction InterviewTestPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"span\", 6);\n    i0.ɵɵtext(5, \"Technical Interview Assessment\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, InterviewTestPageComponent_div_0_div_6_Template, 2, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8)(8, \"div\", 9);\n    i0.ɵɵelement(9, \"i\", 10);\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.navigatePreviousQuestion());\n    });\n    i0.ɵɵelement(14, \"i\", 13);\n    i0.ɵɵtext(15, \" Previous \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\", 14);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.navigateNextQuestion());\n    });\n    i0.ɵɵtext(19, \" Next \");\n    i0.ɵɵelement(20, \"i\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"div\", 17)(22, \"div\", 18)(23, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectSection(\"coding\"));\n    });\n    i0.ɵɵtext(24, \" Section #1 (Coding) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectSection(\"mcq\"));\n    });\n    i0.ɵɵtext(26, \" Section #2 (MCQ) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_27_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectSection(\"qa\"));\n    });\n    i0.ɵɵtext(28, \" Section #3 (Q&A) \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 20);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 21)(32, \"div\", 22);\n    i0.ɵɵtemplate(33, InterviewTestPageComponent_div_0_div_33_Template, 5, 2, \"div\", 23)(34, InterviewTestPageComponent_div_0_div_34_Template, 5, 2, \"div\", 23)(35, InterviewTestPageComponent_div_0_div_35_Template, 6, 4, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\", 24);\n    i0.ɵɵtemplate(37, InterviewTestPageComponent_div_0_div_37_Template, 11, 2, \"div\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 26)(39, \"div\", 27)(40, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function InterviewTestPageComponent_div_0_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitInterview());\n    });\n    i0.ɵɵtemplate(41, InterviewTestPageComponent_div_0_i_41_Template, 1, 0, \"i\", 29)(42, InterviewTestPageComponent_div_0_i_42_Template, 1, 0, \"i\", 30);\n    i0.ɵɵtext(43);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.candidateInfo);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Test Time: \", ctx_r1.formatTime(ctx_r1.timeRemaining), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.canNavigatePrevious());\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.getCurrentQuestionIndex() + 1, \" of \", ctx_r1.getTotalQuestionsForSection(), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.canNavigateNext());\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"active\", ctx_r1.activeSection === \"coding\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"active\", ctx_r1.activeSection === \"mcq\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"active\", ctx_r1.activeSection === \"qa\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" Attempted: \", ctx_r1.getAttemptedCount(), \"/\", ctx_r1.getTotalQuestionsForSection(), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activeSection === \"coding\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activeSection === \"mcq\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activeSection === \"qa\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activeSection === \"mcq\" && ctx_r1.getCurrentMCQQuestion());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.isSubmitting ? \"Submitting...\" : \"Submit Interview\", \" \");\n  }\n}\nfunction InterviewTestPageComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"div\", 56);\n    i0.ɵɵelement(2, \"i\", 54);\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Preparing Your Interview\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Loading questions based on your profile...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class InterviewTestPageComponent {\n  constructor(fb, interviewService, route, router) {\n    this.fb = fb;\n    this.interviewService = interviewService;\n    this.route = route;\n    this.router = router;\n    this.activeSection = 'coding';\n    this.candidateInfo = null;\n    // Timer properties\n    this.timeRemaining = 45 * 60; // 45 minutes in seconds\n    // Question data\n    this.codingQuestions = [];\n    this.mcqQuestions = [];\n    this.currentCodingIndex = 0;\n    // Navigation\n    this.codingAnswers = {};\n    this.mcqAnswers = [];\n    this.subjectiveAnswers = [];\n    // Loading states\n    this.isLoading = true;\n    this.isSubmitting = false;\n    // Simple pre-parsed MCQ options (no caching needed)\n    this.mcqOptionsMap = {\n      'mcq-1': ['Java', 'HTML', 'CSS', 'SQL'],\n      'mcq-2': ['INSERT', 'SELECT', 'UPDATE', 'DELETE'],\n      'mcq-3': ['Angular', 'React', 'Node.js', 'MongoDB']\n    };\n    // Current question tracking for single-question view\n    this.currentMCQIndex = 0;\n    this.currentSubjectiveIndex = 0;\n    // Simple MCQ answer storage\n    this.mcqAnswerStorage = {};\n    this.codingForm = this.fb.group({\n      code: ['']\n    });\n    this.mcqForm = this.fb.group({\n      answers: this.fb.array([])\n    });\n    this.resumeId = this.interviewService.generateResumeId();\n  }\n  ngOnInit() {\n    this.loadCandidateInfo();\n    this.loadQuestions();\n    this.startTimer();\n  }\n  ngOnDestroy() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n  }\n  loadCandidateInfo() {\n    this.candidateInfo = this.interviewService.getCandidateInfo();\n    if (!this.candidateInfo) {\n      // Redirect to landing page if no candidate info\n      this.router.navigate(['/']);\n      return;\n    }\n  }\n  loadQuestions() {\n    if (!this.candidateInfo) return;\n    const {\n      domain,\n      experience\n    } = this.candidateInfo;\n    // Load complete question set\n    this.interviewService.getCompleteQuestionSet(domain, experience).subscribe({\n      next: data => {\n        this.codingQuestions = data.codingQuestions || [];\n        this.mcqQuestions = data.mcqQuestions || [];\n        this.setupForms();\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading questions:', error);\n        this.loadFallbackQuestions();\n        this.isLoading = false;\n      }\n    });\n  }\n  loadFallbackQuestions() {\n    // Fallback questions if backend is not available\n    this.codingQuestions = [{\n      id: 'coding-1',\n      title: 'Two Sum Problem',\n      description: 'Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.',\n      starterCode: 'function twoSum(nums, target) {\\n    // Your code here\\n}',\n      domain: this.candidateInfo?.domain || 'General',\n      difficulty: 'EASY',\n      experienceLevel: 'FRESHER'\n    }];\n    // Simple MCQ data with pre-parsed options\n    this.mcqQuestions = [{\n      id: 'mcq-1',\n      title: 'Programming Fundamentals',\n      description: 'Which of the following is a programming language?',\n      options: '[\"Java\", \"HTML\", \"CSS\", \"SQL\"]',\n      questionType: 'MCQ',\n      domain: this.candidateInfo?.domain || 'General',\n      multipleSelection: false,\n      difficulty: 'EASY'\n    }, {\n      id: 'mcq-2',\n      title: 'Database Concepts',\n      description: 'Which SQL command is used to retrieve data from a database?',\n      options: '[\"INSERT\", \"SELECT\", \"UPDATE\", \"DELETE\"]',\n      questionType: 'MCQ',\n      domain: this.candidateInfo?.domain || 'General',\n      multipleSelection: false,\n      difficulty: 'EASY'\n    }, {\n      id: 'mcq-3',\n      title: 'Web Development',\n      description: 'Which of the following are frontend technologies? (Select multiple)',\n      options: '[\"Angular\", \"React\", \"Node.js\", \"MongoDB\"]',\n      questionType: 'MCQ',\n      domain: this.candidateInfo?.domain || 'General',\n      multipleSelection: true,\n      difficulty: 'MEDIUM'\n    }];\n    this.setupForms();\n  }\n  setupForms() {\n    // Setup coding form\n    if (this.codingQuestions.length > 0) {\n      this.codingForm.patchValue({\n        code: this.codingQuestions[0].starterCode || ''\n      });\n    }\n    // Setup MCQ form\n    const answersArray = this.mcqForm.get('answers');\n    answersArray.clear();\n    this.mcqQuestions.forEach(question => {\n      if (question.multipleSelection) {\n        const checkboxGroup = this.fb.group({});\n        const options = this.interviewService.parseOptions(question.options);\n        options.forEach(option => {\n          checkboxGroup.addControl(option, new FormControl(false));\n        });\n        answersArray.push(checkboxGroup);\n      } else {\n        answersArray.push(new FormControl(''));\n      }\n    });\n  }\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      this.timeRemaining--;\n      if (this.timeRemaining <= 0) {\n        this.submitInterview();\n      }\n    }, 1000);\n  }\n  formatTime(seconds) {\n    return this.interviewService.formatTime(seconds);\n  }\n  selectSection(section) {\n    this.saveCurrentSectionData();\n    this.activeSection = section;\n  }\n  saveCurrentSectionData() {\n    if (this.activeSection === 'coding' && this.codingQuestions.length > 0) {\n      const currentQuestion = this.codingQuestions[this.currentCodingIndex];\n      this.codingAnswers[currentQuestion.id] = this.codingForm.value.code;\n    }\n    if (this.activeSection === 'mcq') {\n      this.saveMCQAnswers();\n    }\n  }\n  saveMCQAnswers() {\n    const formAnswers = this.mcqForm.value.answers;\n    this.mcqAnswers = [];\n    this.mcqQuestions.forEach((question, index) => {\n      const options = this.interviewService.parseOptions(question.options);\n      if (question.multipleSelection) {\n        const selectedOptions = [];\n        const checkboxGroup = formAnswers[index];\n        Object.keys(checkboxGroup).forEach(option => {\n          if (checkboxGroup[option]) {\n            selectedOptions.push(option);\n          }\n        });\n        if (selectedOptions.length > 0) {\n          this.mcqAnswers.push({\n            questionId: question.id,\n            selectedOptions\n          });\n        }\n      } else {\n        if (formAnswers[index]) {\n          this.mcqAnswers.push({\n            questionId: question.id,\n            selectedOptions: [formAnswers[index]]\n          });\n        }\n      }\n    });\n  }\n  navigateCoding(direction) {\n    this.saveCurrentSectionData();\n    if (direction === 'next' && this.currentCodingIndex < this.codingQuestions.length - 1) {\n      this.currentCodingIndex++;\n    } else if (direction === 'prev' && this.currentCodingIndex > 0) {\n      this.currentCodingIndex--;\n    }\n    const currentQuestion = this.codingQuestions[this.currentCodingIndex];\n    const savedAnswer = this.codingAnswers[currentQuestion.id];\n    this.codingForm.patchValue({\n      code: savedAnswer || currentQuestion.starterCode || ''\n    });\n  }\n  onSubjectiveAnswersUpdate(answers) {\n    this.subjectiveAnswers = answers;\n  }\n  submitInterview() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Show confirmation dialog with current progress\n      const attemptedCount = _this.getAttemptedCount();\n      const codingTotal = _this.codingQuestions.length;\n      const mcqTotal = _this.mcqQuestions.length;\n      const subjectiveTotal = 4; // Fixed number of subjective questions\n      const totalQuestions = codingTotal + mcqTotal + subjectiveTotal;\n      const confirmMessage = `Are you sure you want to submit your interview?\\n\\n` + `Progress Summary:\\n` + `• Coding: ${_this.getCodingAttemptedCount()}/${codingTotal} questions attempted\\n` + `• MCQ: ${_this.getMCQAttemptedCount()}/${mcqTotal} questions attempted\\n` + `• Subjective: ${_this.getSubjectiveAttemptedCount()}/${subjectiveTotal} questions attempted\\n` + `• Total: ${attemptedCount}/${totalQuestions} questions attempted\\n\\n` + `Time remaining: ${_this.formatTime(_this.timeRemaining)}\\n\\n` + `Once submitted, you cannot make any changes.`;\n      if (!confirm(confirmMessage)) {\n        return; // User cancelled submission\n      }\n      _this.saveCurrentSectionData();\n      _this.isSubmitting = true;\n      if (_this.timerInterval) {\n        clearInterval(_this.timerInterval);\n      }\n      if (!_this.candidateInfo) {\n        alert('Candidate information is missing. Please restart the interview.');\n        _this.router.navigate(['/']);\n        return;\n      }\n      try {\n        const submission = {\n          resumeId: _this.resumeId,\n          candidateName: _this.candidateInfo.name,\n          candidateEmail: _this.candidateInfo.email,\n          domain: _this.candidateInfo.domain,\n          experienceLevel: _this.interviewService.getExperienceLevel(_this.candidateInfo.experience),\n          totalQuestions: _this.codingQuestions.length + _this.mcqQuestions.length + _this.subjectiveAnswers.length,\n          codingQuestions: _this.codingQuestions.length,\n          mcqQuestions: _this.mcqQuestions.length,\n          subjectiveQuestions: _this.subjectiveAnswers.length,\n          correctAnswers: _this.calculateCorrectAnswers(),\n          scorePercentage: _this.calculateOverallScore(),\n          codingScore: _this.calculateCodingScore(),\n          mcqScore: _this.calculateMCQScore(),\n          subjectiveScore: _this.calculateSubjectiveScore(),\n          interviewDuration: Math.round((45 * 60 - _this.timeRemaining) / 60),\n          completedOnTime: _this.timeRemaining > 0,\n          status: 'COMPLETED',\n          feedbackSummary: _this.generateFeedbackSummary()\n        };\n        const response = yield _this.interviewService.submitInterview(submission).toPromise();\n        if (response && response.success) {\n          // Save interview summary for thank you page\n          const interviewSummary = {\n            candidateName: _this.candidateInfo.name,\n            domain: _this.candidateInfo.domain,\n            experienceLevel: _this.interviewService.getExperienceLevel(_this.candidateInfo.experience),\n            codingQuestions: _this.getCodingAttemptedCount(),\n            mcqQuestions: _this.getMCQAttemptedCount(),\n            subjectiveQuestions: _this.getSubjectiveAttemptedCount(),\n            totalQuestions: submission.totalQuestions,\n            interviewDuration: `${submission.interviewDuration} minutes`\n          };\n          sessionStorage.setItem('interviewSummary', JSON.stringify(interviewSummary));\n          // Navigate to thank you page\n          _this.router.navigate(['/thank-you']);\n        } else {\n          throw new Error('Submission failed');\n        }\n      } catch (error) {\n        console.error('Submission error:', error);\n        alert('There was an error submitting your interview. Please try again.');\n      } finally {\n        _this.isSubmitting = false;\n      }\n    })();\n  }\n  calculateCorrectAnswers() {\n    const subjectiveCorrect = this.subjectiveAnswers.filter(a => a.correct).length;\n    // MCQ and coding scoring would be implemented based on backend responses\n    return subjectiveCorrect;\n  }\n  calculateOverallScore() {\n    const scores = [this.calculateCodingScore(), this.calculateMCQScore(), this.calculateSubjectiveScore()].filter(score => score > 0);\n    return scores.length > 0 ? Math.round(scores.reduce((a, b) => a + b, 0) / scores.length) : 0;\n  }\n  calculateCodingScore() {\n    // Placeholder - would be calculated by backend\n    return Object.keys(this.codingAnswers).length > 0 ? 75 : 0;\n  }\n  calculateMCQScore() {\n    // Placeholder - would be calculated by backend\n    return this.mcqAnswers.length > 0 ? 80 : 0;\n  }\n  calculateSubjectiveScore() {\n    if (this.subjectiveAnswers.length === 0) return 0;\n    // Only count evaluated answers for scoring\n    const evaluatedAnswers = this.subjectiveAnswers.filter(answer => answer.evaluated && answer.similarity !== undefined);\n    if (evaluatedAnswers.length === 0) {\n      // If no answers evaluated yet, return 0\n      return 0;\n    }\n    const avgSimilarity = evaluatedAnswers.reduce((sum, answer) => sum + (answer.similarity || 0), 0) / evaluatedAnswers.length;\n    return Math.round(avgSimilarity * 100);\n  }\n  generateFeedbackSummary() {\n    const sections = [];\n    if (Object.keys(this.codingAnswers).length > 0) {\n      sections.push('Coding: Demonstrated problem-solving abilities');\n    }\n    if (this.mcqAnswers.length > 0) {\n      sections.push('MCQ: Good technical knowledge');\n    }\n    if (this.subjectiveAnswers.length > 0) {\n      sections.push('Subjective: Clear communication and understanding');\n    }\n    return sections.join('. ') + '.';\n  }\n  get currentCodingQuestion() {\n    return this.codingQuestions[this.currentCodingIndex] || null;\n  }\n  get answersArray() {\n    return this.mcqForm.get('answers');\n  }\n  getCurrentMCQQuestion() {\n    return this.mcqQuestions[this.currentMCQIndex] || null;\n  }\n  getCurrentMCQOptions() {\n    const question = this.getCurrentMCQQuestion();\n    return question ? this.mcqOptionsMap[question.id] || [] : [];\n  }\n  selectSingleOption(option) {\n    const question = this.getCurrentMCQQuestion();\n    if (question) {\n      this.mcqAnswerStorage[question.id] = option;\n    }\n  }\n  toggleMultipleOption(option, event) {\n    const question = this.getCurrentMCQQuestion();\n    if (question) {\n      let currentAnswers = this.mcqAnswerStorage[question.id] || [];\n      if (event.target.checked) {\n        if (!currentAnswers.includes(option)) {\n          currentAnswers.push(option);\n        }\n      } else {\n        currentAnswers = currentAnswers.filter(ans => ans !== option);\n      }\n      this.mcqAnswerStorage[question.id] = currentAnswers;\n    }\n  }\n  clearCurrentMCQResponse() {\n    const question = this.getCurrentMCQQuestion();\n    if (question) {\n      delete this.mcqAnswerStorage[question.id];\n      // Clear form inputs\n      const inputs = document.querySelectorAll(`input[name=\"mcq_${question.id}\"]`);\n      inputs.forEach(input => input.checked = false);\n      const checkboxes = document.querySelectorAll('.option-item input[type=\"checkbox\"]');\n      checkboxes.forEach(checkbox => checkbox.checked = false);\n    }\n  }\n  getCurrentSubjectiveQuestion() {\n    return this.subjectiveAnswers[this.currentSubjectiveIndex] || null;\n  }\n  // Navigation methods for single question view\n  canNavigateMCQPrevious() {\n    return this.currentMCQIndex > 0;\n  }\n  canNavigateMCQNext() {\n    return this.currentMCQIndex < this.mcqQuestions.length - 1;\n  }\n  navigateMCQPrevious() {\n    if (this.canNavigateMCQPrevious()) {\n      this.currentMCQIndex--;\n    }\n  }\n  navigateMCQNext() {\n    if (this.canNavigateMCQNext()) {\n      this.currentMCQIndex++;\n    }\n  }\n  // Get total questions for current section\n  getTotalQuestionsForSection() {\n    switch (this.activeSection) {\n      case 'coding':\n        return this.codingQuestions.length;\n      case 'mcq':\n        return this.mcqQuestions.length;\n      case 'qa':\n        return 4;\n      // Fixed number of subjective questions\n      default:\n        return 0;\n    }\n  }\n  // Get current question index for active section\n  getCurrentQuestionIndex() {\n    switch (this.activeSection) {\n      case 'coding':\n        return this.currentCodingIndex;\n      case 'mcq':\n        return this.currentMCQIndex;\n      case 'qa':\n        return this.currentSubjectiveIndex;\n      default:\n        return 0;\n    }\n  }\n  // Get attempted questions count for active section (questions with actual answers)\n  getAttemptedCount() {\n    switch (this.activeSection) {\n      case 'coding':\n        return this.getCodingAttemptedCount();\n      case 'mcq':\n        return this.getMCQAttemptedCount();\n      case 'qa':\n        return this.getSubjectiveAttemptedCount();\n      default:\n        return 0;\n    }\n  }\n  getCodingAttemptedCount() {\n    let count = 0;\n    this.codingQuestions.forEach(question => {\n      const answer = this.codingAnswers[question.id];\n      // Count as attempted if user typed something different from starter code\n      if (answer && answer.trim() && answer.trim() !== (question.starterCode || '').trim()) {\n        count++;\n      }\n    });\n    return count;\n  }\n  getMCQAttemptedCount() {\n    let count = 0;\n    this.mcqQuestions.forEach(question => {\n      const answer = this.mcqAnswerStorage[question.id];\n      if (answer) {\n        if (question.multipleSelection) {\n          // For multiple selection, check if array has any items\n          if (Array.isArray(answer) && answer.length > 0) {\n            count++;\n          }\n        } else {\n          // For single selection, check if string is not empty\n          if (typeof answer === 'string' && answer.trim()) {\n            count++;\n          }\n        }\n      }\n    });\n    return count;\n  }\n  getSubjectiveAttemptedCount() {\n    // Count subjective answers that have actual text content\n    return this.subjectiveAnswers.filter(answer => answer.answer && answer.answer.trim().length > 0).length;\n  }\n  // Universal navigation methods\n  canNavigatePrevious() {\n    switch (this.activeSection) {\n      case 'coding':\n        return this.currentCodingIndex > 0;\n      case 'mcq':\n        return this.canNavigateMCQPrevious();\n      case 'qa':\n        return this.currentSubjectiveIndex > 0;\n      default:\n        return false;\n    }\n  }\n  canNavigateNext() {\n    switch (this.activeSection) {\n      case 'coding':\n        return this.currentCodingIndex < this.codingQuestions.length - 1;\n      case 'mcq':\n        return this.canNavigateMCQNext();\n      case 'qa':\n        return this.currentSubjectiveIndex < 3;\n      // 4 questions (0-3)\n      default:\n        return false;\n    }\n  }\n  navigatePreviousQuestion() {\n    switch (this.activeSection) {\n      case 'coding':\n        if (this.currentCodingIndex > 0) {\n          this.navigateCoding('prev');\n        }\n        break;\n      case 'mcq':\n        this.navigateMCQPrevious();\n        break;\n      case 'qa':\n        this.currentSubjectiveIndex = Math.max(0, this.currentSubjectiveIndex - 1);\n        break;\n    }\n  }\n  navigateNextQuestion() {\n    switch (this.activeSection) {\n      case 'coding':\n        if (this.currentCodingIndex < this.codingQuestions.length - 1) {\n          this.navigateCoding('next');\n        }\n        break;\n      case 'mcq':\n        this.navigateMCQNext();\n        break;\n      case 'qa':\n        this.currentSubjectiveIndex = Math.min(3, this.currentSubjectiveIndex + 1);\n        break;\n      // 4 questions (0-3)\n    }\n  }\n  goToQuestion(index) {\n    switch (this.activeSection) {\n      case 'coding':\n        if (index >= 0 && index < this.codingQuestions.length) {\n          this.currentCodingIndex = index;\n          const currentQuestion = this.codingQuestions[this.currentCodingIndex];\n          const savedAnswer = this.codingAnswers[currentQuestion.id];\n          this.codingForm.patchValue({\n            code: savedAnswer || currentQuestion.starterCode || ''\n          });\n        }\n        break;\n      case 'mcq':\n        if (index >= 0 && index < this.mcqQuestions.length) {\n          this.currentMCQIndex = index;\n        }\n        break;\n      case 'qa':\n        if (index >= 0 && index < 4) {\n          // 4 subjective questions\n          this.currentSubjectiveIndex = index;\n        }\n        break;\n    }\n  }\n  getQuestionNumbers() {\n    const total = this.getTotalQuestionsForSection();\n    return Array.from({\n      length: total\n    }, (_, i) => i);\n  }\n  static {\n    this.ɵfac = function InterviewTestPageComponent_Factory(t) {\n      return new (t || InterviewTestPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.InterviewService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InterviewTestPageComponent,\n      selectors: [[\"app-interview-test-page\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[\"class\", \"mettl-assessment\", 4, \"ngIf\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [1, \"mettl-assessment\"], [1, \"mettl-header\"], [1, \"header-left\"], [1, \"logo-section\"], [1, \"assessment-title\"], [\"class\", \"candidate-info\", 4, \"ngIf\"], [1, \"header-right\"], [1, \"timer-section\"], [1, \"fas\", \"fa-clock\"], [1, \"question-navigation\"], [1, \"nav-btn\", \"prev-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-chevron-left\"], [1, \"question-counter\"], [1, \"nav-btn\", \"next-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-chevron-right\"], [1, \"section-navigation\"], [1, \"section-selector\"], [1, \"section-btn\", 3, \"click\"], [1, \"attempted-info\"], [1, \"question-container\"], [1, \"question-left\"], [\"class\", \"question-content\", 4, \"ngIf\"], [1, \"answer-right\"], [\"class\", \"answer-section\", 4, \"ngIf\"], [1, \"bottom-navigation\"], [1, \"nav-right\"], [1, \"submit-btn\", 3, \"click\", \"disabled\"], [\"class\", \"fas fa-paper-plane\", 4, \"ngIf\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"candidate-info\"], [1, \"question-content\"], [1, \"question-header\"], [\"class\", \"question-body\", 4, \"ngIf\"], [1, \"question-body\"], [1, \"question-text\"], [1, \"coding-input\", 3, \"formGroup\"], [\"formControlName\", \"code\", \"placeholder\", \"Write your code here...\", \"rows\", \"12\", 1, \"code-textarea\"], [3, \"answersUpdate\", \"domain\", \"resumeId\", \"currentQuestionIndex\"], [1, \"answer-section\"], [1, \"mcq-options\"], [1, \"options-list\"], [4, \"ngIf\"], [1, \"clear-response\"], [1, \"clear-btn\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [\"class\", \"option-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"option-item\"], [\"type\", \"radio\", 3, \"change\", \"id\", \"name\", \"value\"], [3, \"for\"], [1, \"multiple-hint\"], [\"type\", \"checkbox\", 3, \"change\", \"id\", \"value\"], [1, \"fas\", \"fa-paper-plane\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"], [1, \"loading-container\"], [1, \"loading-content\"]],\n      template: function InterviewTestPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, InterviewTestPageComponent_div_0_Template, 44, 22, \"div\", 0)(1, InterviewTestPageComponent_div_1_Template, 7, 0, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [CommonModule, i4.NgForOf, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, SubjectiveQAComponent],\n      styles: [\"\\n\\n.mettl-assessment[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n  background-color: #f5f5f5;\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\n\\n\\n.mettl-header[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #1e3c72, #2a5298);\\n  color: white;\\n  padding: 12px 20px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\\n}\\n\\n.header-left[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 20px;\\n}\\n\\n.assessment-title[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.candidate-info[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  opacity: 0.9;\\n}\\n\\n.header-right[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 20px;\\n}\\n\\n.timer-section[_ngcontent-%COMP%] {\\n  background: rgba(255,255,255,0.1);\\n  padding: 8px 16px;\\n  border-radius: 20px;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-size: 14px;\\n  font-weight: 500;\\n}\\n\\n.timer-section[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  color: #ffd700;\\n}\\n\\n\\n\\n.question-navigation[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n}\\n\\n.nav-btn[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  padding: 6px 12px;\\n  background: rgba(255,255,255,0.1);\\n  border: 1px solid rgba(255,255,255,0.2);\\n  color: white;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  transition: all 0.2s ease;\\n}\\n\\n.nav-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background: rgba(255,255,255,0.2);\\n  border-color: rgba(255,255,255,0.3);\\n}\\n\\n.nav-btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n.question-counter[_ngcontent-%COMP%] {\\n  font-size: 13px;\\n  color: rgba(255,255,255,0.9);\\n  font-weight: 500;\\n  padding: 0 8px;\\n}\\n\\n\\n\\n.section-navigation[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 15px 20px;\\n  border-bottom: 1px solid #e0e0e0;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.section-selector[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.section-btn[_ngcontent-%COMP%] {\\n  padding: 8px 16px;\\n  background: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  transition: all 0.2s ease;\\n  color: #495057;\\n}\\n\\n.section-btn[_ngcontent-%COMP%]:hover {\\n  background: #e9ecef;\\n}\\n\\n.section-btn.active[_ngcontent-%COMP%] {\\n  background: #007bff;\\n  color: white;\\n  border-color: #007bff;\\n}\\n\\n.attempted-info[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #6c757d;\\n  font-weight: 500;\\n}\\n\\n\\n\\n.question-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex: 1;\\n  min-height: 0;\\n}\\n\\n\\n\\n.question-left[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background: white;\\n  border-right: 1px solid #e0e0e0;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.question-content[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.question-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n  padding-bottom: 15px;\\n  border-bottom: 1px solid #e9ecef;\\n}\\n\\n.question-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #333;\\n  font-size: 18px;\\n  font-weight: 600;\\n}\\n\\n.question-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  padding: 6px 12px;\\n  background: white;\\n  border: 1px solid #007bff;\\n  color: #007bff;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  transition: all 0.2s ease;\\n}\\n\\n.action-btn[_ngcontent-%COMP%]:hover {\\n  background: #007bff;\\n  color: white;\\n}\\n\\n.question-body[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.question-body[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 15px 0;\\n  color: #333;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.question-text[_ngcontent-%COMP%] {\\n  color: #555;\\n  line-height: 1.6;\\n  margin-bottom: 20px;\\n  font-size: 14px;\\n}\\n\\n\\n\\n.coding-input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.coding-input[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  color: #333;\\n  font-size: 14px;\\n}\\n\\n.code-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-height: 300px;\\n  border: 1px solid #d1d3d4;\\n  border-radius: 4px;\\n  padding: 12px;\\n  font-family: 'Courier New', monospace;\\n  font-size: 13px;\\n  line-height: 1.4;\\n  resize: vertical;\\n  background: #fafafa;\\n}\\n\\n.code-textarea[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #007bff;\\n  box-shadow: 0 0 0 2px rgba(0,123,255,0.25);\\n}\\n\\n\\n\\n.answer-right[_ngcontent-%COMP%] {\\n  width: 400px;\\n  background: #f8f9fa;\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.answer-section[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 20px 0;\\n  color: #333;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.mcq-options[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.options-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n}\\n\\n.option-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 10px;\\n  padding: 12px;\\n  background: white;\\n  border: 1px solid #dee2e6;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.option-item[_ngcontent-%COMP%]:hover {\\n  border-color: #007bff;\\n  background: #f8f9ff;\\n}\\n\\n.option-item[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%], .option-item[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin: 2px 0 0 0;\\n  cursor: pointer;\\n}\\n\\n.option-item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  flex: 1;\\n  cursor: pointer;\\n  line-height: 1.4;\\n  font-size: 14px;\\n  color: #333;\\n}\\n\\n.multiple-hint[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  font-size: 12px;\\n  color: #6c757d;\\n  font-style: italic;\\n}\\n\\n.clear-response[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  padding-top: 15px;\\n  border-top: 1px solid #dee2e6;\\n}\\n\\n.clear-btn[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  padding: 8px 16px;\\n  background: white;\\n  border: 1px solid #dc3545;\\n  color: #dc3545;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  transition: all 0.2s ease;\\n}\\n\\n.clear-btn[_ngcontent-%COMP%]:hover {\\n  background: #dc3545;\\n  color: white;\\n}\\n\\n\\n\\n.bottom-navigation[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 15px 20px;\\n  border-top: 1px solid #e0e0e0;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  box-shadow: 0 -2px 8px rgba(0,0,0,0.1);\\n}\\n\\n.nav-left[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.question-pagination[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n}\\n\\n.nav-arrow[_ngcontent-%COMP%] {\\n  width: 32px;\\n  height: 32px;\\n  border: 1px solid #dee2e6;\\n  background: white;\\n  border-radius: 4px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.nav-arrow[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  border-color: #007bff;\\n  color: #007bff;\\n}\\n\\n.nav-arrow[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.4;\\n  cursor: not-allowed;\\n}\\n\\n.page-numbers[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.page-number[_ngcontent-%COMP%] {\\n  width: 32px;\\n  height: 32px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 1px solid #dee2e6;\\n  background: white;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 500;\\n  transition: all 0.2s ease;\\n}\\n\\n.page-number[_ngcontent-%COMP%]:hover {\\n  border-color: #007bff;\\n  background: #f8f9ff;\\n}\\n\\n.page-number.active[_ngcontent-%COMP%] {\\n  background: #007bff;\\n  color: white;\\n  border-color: #007bff;\\n}\\n\\n.next-btn[_ngcontent-%COMP%] {\\n  padding: 8px 20px;\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 500;\\n  transition: all 0.2s ease;\\n}\\n\\n.next-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background: #0056b3;\\n}\\n\\n.next-btn[_ngcontent-%COMP%]:disabled {\\n  background: #6c757d;\\n  cursor: not-allowed;\\n}\\n\\n.nav-right[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%] {\\n  padding: 12px 24px;\\n  background: linear-gradient(135deg, #28a745, #20c997);\\n  color: white;\\n  border: none;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 600;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 2px 8px rgba(40,167,69,0.3);\\n}\\n\\n.submit-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background: linear-gradient(135deg, #218838, #1dc0a7);\\n  transform: translateY(-1px);\\n  box-shadow: 0 4px 12px rgba(40,167,69,0.4);\\n}\\n\\n.submit-btn[_ngcontent-%COMP%]:disabled {\\n  background: #6c757d;\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: none;\\n}\\n\\n\\n\\n.loading-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  background-color: #f5f5f5;\\n}\\n\\n.loading-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 40px;\\n  background: white;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 24px rgba(0,0,0,0.1);\\n}\\n\\n.loading-content[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 3rem;\\n  color: #007bff;\\n  margin-bottom: 20px;\\n}\\n\\n.loading-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #333;\\n  margin-bottom: 10px;\\n  font-size: 24px;\\n}\\n\\n.loading-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: #666;\\n  margin: 0;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .question-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .answer-right[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  \\n  .mettl-header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 10px;\\n    text-align: center;\\n  }\\n  \\n  .section-navigation[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 10px;\\n  }\\n  \\n  .section-selector[_ngcontent-%COMP%] {\\n    flex-wrap: wrap;\\n    justify-content: center;\\n  }\\n  \\n  .bottom-navigation[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 15px;\\n  }\\n  \\n  .question-pagination[_ngcontent-%COMP%] {\\n    flex-wrap: wrap;\\n    justify-content: center;\\n  }\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","FormControl","SubjectiveQAComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r1","candidateInfo","name","domain","ɵɵtextInterpolate","currentCodingQuestion","title","ɵɵtextInterpolate1","description","ɵɵproperty","codingForm","ɵɵtemplate","InterviewTestPageComponent_div_0_div_33_div_4_Template","currentCodingIndex","tmp_3_0","getCurrentMCQQuestion","InterviewTestPageComponent_div_0_div_34_div_4_Template","currentMCQIndex","ɵɵlistener","InterviewTestPageComponent_div_0_div_35_Template_app_subjective_qa_answersUpdate_5_listener","$event","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","onSubjectiveAnswersUpdate","currentSubjectiveIndex","resumeId","InterviewTestPageComponent_div_0_div_37_ng_container_5_div_1_Template_input_change_1_listener","option_r6","_r5","$implicit","selectSingleOption","i_r7","tmp_7_0","id","ɵɵelementContainerStart","InterviewTestPageComponent_div_0_div_37_ng_container_5_div_1_Template","getCurrentMCQOptions","InterviewTestPageComponent_div_0_div_37_ng_container_6_div_1_Template_input_change_1_listener","option_r9","_r8","toggleMultipleOption","i_r10","InterviewTestPageComponent_div_0_div_37_ng_container_6_div_1_Template","InterviewTestPageComponent_div_0_div_37_ng_container_5_Template","InterviewTestPageComponent_div_0_div_37_ng_container_6_Template","InterviewTestPageComponent_div_0_div_37_Template_button_click_8_listener","_r4","clearCurrentMCQResponse","ɵɵelement","tmp_2_0","multipleSelection","InterviewTestPageComponent_div_0_div_6_Template","InterviewTestPageComponent_div_0_Template_button_click_13_listener","_r1","navigatePreviousQuestion","InterviewTestPageComponent_div_0_Template_button_click_18_listener","navigateNextQuestion","InterviewTestPageComponent_div_0_Template_button_click_23_listener","selectSection","InterviewTestPageComponent_div_0_Template_button_click_25_listener","InterviewTestPageComponent_div_0_Template_button_click_27_listener","InterviewTestPageComponent_div_0_div_33_Template","InterviewTestPageComponent_div_0_div_34_Template","InterviewTestPageComponent_div_0_div_35_Template","InterviewTestPageComponent_div_0_div_37_Template","InterviewTestPageComponent_div_0_Template_button_click_40_listener","submitInterview","InterviewTestPageComponent_div_0_i_41_Template","InterviewTestPageComponent_div_0_i_42_Template","formatTime","timeRemaining","canNavigatePrevious","getCurrentQuestionIndex","getTotalQuestionsForSection","canNavigateNext","ɵɵclassProp","activeSection","getAttemptedCount","isSubmitting","InterviewTestPageComponent","constructor","fb","interviewService","route","router","codingQuestions","mcqQuestions","codingAnswers","mcqAnswers","subjectiveAnswers","isLoading","mcqOptionsMap","mcqAnswerStorage","group","code","mcqForm","answers","array","generateResumeId","ngOnInit","loadCandidateInfo","loadQuestions","startTimer","ngOnDestroy","timerInterval","clearInterval","getCandidateInfo","navigate","experience","getCompleteQuestionSet","subscribe","next","data","setupForms","error","console","loadFallbackQuestions","starterCode","difficulty","experienceLevel","options","questionType","length","patchValue","answersArray","get","clear","forEach","question","checkboxGroup","parseOptions","option","addControl","push","setInterval","seconds","section","saveCurrentSectionData","currentQuestion","value","saveMCQAnswers","formAnswers","index","selectedOptions","Object","keys","questionId","navigateCoding","direction","savedAnswer","_this","_asyncToGenerator","attemptedCount","codingTotal","mcqTotal","subjectiveTotal","totalQuestions","confirmMessage","getCodingAttemptedCount","getMCQAttemptedCount","getSubjectiveAttemptedCount","confirm","alert","submission","candidateName","candidateEmail","email","getExperienceLevel","subjectiveQuestions","correctAnswers","calculateCorrectAnswers","scorePercentage","calculateOverallScore","codingScore","calculateCodingScore","mcqScore","calculateMCQScore","subjectiveScore","calculateSubjectiveScore","interviewDuration","Math","round","completedOnTime","status","feedbackSummary","generateFeedbackSummary","response","toPromise","success","interviewSummary","sessionStorage","setItem","JSON","stringify","Error","subjectiveCorrect","filter","a","correct","scores","score","reduce","b","evaluatedAnswers","answer","evaluated","similarity","undefined","avgSimilarity","sum","sections","join","event","currentAnswers","target","checked","includes","ans","inputs","document","querySelectorAll","input","checkboxes","checkbox","getCurrentSubjectiveQuestion","canNavigateMCQPrevious","canNavigateMCQNext","navigateMCQPrevious","navigateMCQNext","count","trim","Array","isArray","max","min","goToQuestion","getQuestionNumbers","total","from","_","i","ɵɵdirectiveInject","i1","FormBuilder","i2","InterviewService","i3","ActivatedRoute","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","InterviewTestPageComponent_Template","rf","ctx","InterviewTestPageComponent_div_0_Template","InterviewTestPageComponent_div_1_Template","i4","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Frontend\\src\\app\\components\\interview-test-page\\interview-test-page.component.ts","C:\\Frontend\\src\\app\\components\\interview-test-page\\interview-test-page.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InterviewService, CodingQuestion, MCQQuestion, CandidateInfo, InterviewSubmission } from '../../services/interview.service';\r\nimport { SubjectiveQAComponent } from '../subjective-qa/subjective-qa.component';\r\n\r\n@Component({\r\n  selector: 'app-interview-test-page',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, SubjectiveQAComponent],\r\n  templateUrl: './interview-test-page.component.html',\r\n  styleUrls: ['./interview-test-page.component.css']\r\n})\r\nexport class InterviewTestPageComponent implements OnInit, OnDestroy {\r\n  activeSection: 'coding' | 'mcq' | 'qa' = 'coding';\r\n  candidateInfo: CandidateInfo | null = null;\r\n  codingForm: FormGroup;\r\n  mcqForm: FormGroup;\r\n  \r\n  // Timer properties\r\n  timeRemaining = 45 * 60; // 45 minutes in seconds\r\n  timerInterval: any;\r\n  \r\n  // Question data\r\n  codingQuestions: CodingQuestion[] = [];\r\n  mcqQuestions: MCQQuestion[] = [];\r\n  currentCodingIndex = 0;\r\n  \r\n  // Resume ID for tracking\r\n  resumeId: string;\r\n  \r\n  // Navigation\r\n  codingAnswers: { [questionId: string]: string } = {};\r\n  mcqAnswers: any[] = [];\r\n  subjectiveAnswers: any[] = [];\r\n\r\n  // Loading states\r\n  isLoading = true;\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private interviewService: InterviewService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.codingForm = this.fb.group({\r\n      code: ['']\r\n    });\r\n\r\n    this.mcqForm = this.fb.group({\r\n      answers: this.fb.array([])\r\n    });\r\n\r\n    this.resumeId = this.interviewService.generateResumeId();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCandidateInfo();\r\n    this.loadQuestions();\r\n    this.startTimer();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.timerInterval) {\r\n      clearInterval(this.timerInterval);\r\n    }\r\n  }\r\n\r\n  loadCandidateInfo() {\r\n    this.candidateInfo = this.interviewService.getCandidateInfo();\r\n    if (!this.candidateInfo) {\r\n      // Redirect to landing page if no candidate info\r\n      this.router.navigate(['/']);\r\n      return;\r\n    }\r\n  }\r\n\r\n  loadQuestions() {\r\n    if (!this.candidateInfo) return;\r\n\r\n    const { domain, experience } = this.candidateInfo;\r\n\r\n    // Load complete question set\r\n    this.interviewService.getCompleteQuestionSet(domain, experience).subscribe({\r\n      next: (data) => {\r\n        this.codingQuestions = data.codingQuestions || [];\r\n        this.mcqQuestions = data.mcqQuestions || [];\r\n        this.setupForms();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading questions:', error);\r\n        this.loadFallbackQuestions();\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadFallbackQuestions() {\r\n    // Fallback questions if backend is not available\r\n    this.codingQuestions = [\r\n      {\r\n        id: 'coding-1',\r\n        title: 'Two Sum Problem',\r\n        description: 'Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.',\r\n        starterCode: 'function twoSum(nums, target) {\\n    // Your code here\\n}',\r\n        domain: this.candidateInfo?.domain || 'General',\r\n        difficulty: 'EASY',\r\n        experienceLevel: 'FRESHER'\r\n      }\r\n    ];\r\n\r\n    // Simple MCQ data with pre-parsed options\r\n    this.mcqQuestions = [\r\n      {\r\n        id: 'mcq-1',\r\n        title: 'Programming Fundamentals',\r\n        description: 'Which of the following is a programming language?',\r\n        options: '[\"Java\", \"HTML\", \"CSS\", \"SQL\"]',\r\n        questionType: 'MCQ',\r\n        domain: this.candidateInfo?.domain || 'General',\r\n        multipleSelection: false,\r\n        difficulty: 'EASY'\r\n      },\r\n      {\r\n        id: 'mcq-2',\r\n        title: 'Database Concepts',\r\n        description: 'Which SQL command is used to retrieve data from a database?',\r\n        options: '[\"INSERT\", \"SELECT\", \"UPDATE\", \"DELETE\"]',\r\n        questionType: 'MCQ',\r\n        domain: this.candidateInfo?.domain || 'General',\r\n        multipleSelection: false,\r\n        difficulty: 'EASY'\r\n      },\r\n      {\r\n        id: 'mcq-3',\r\n        title: 'Web Development',\r\n        description: 'Which of the following are frontend technologies? (Select multiple)',\r\n        options: '[\"Angular\", \"React\", \"Node.js\", \"MongoDB\"]',\r\n        questionType: 'MCQ',\r\n        domain: this.candidateInfo?.domain || 'General',\r\n        multipleSelection: true,\r\n        difficulty: 'MEDIUM'\r\n      }\r\n    ];\r\n\r\n    this.setupForms();\r\n  }\r\n\r\n  setupForms() {\r\n    // Setup coding form\r\n    if (this.codingQuestions.length > 0) {\r\n      this.codingForm.patchValue({\r\n        code: this.codingQuestions[0].starterCode || ''\r\n      });\r\n    }\r\n\r\n    // Setup MCQ form\r\n    const answersArray = this.mcqForm.get('answers') as FormArray;\r\n    answersArray.clear();\r\n    \r\n    this.mcqQuestions.forEach(question => {\r\n      if (question.multipleSelection) {\r\n        const checkboxGroup = this.fb.group({});\r\n        const options = this.interviewService.parseOptions(question.options);\r\n        options.forEach(option => {\r\n          checkboxGroup.addControl(option, new FormControl(false));\r\n        });\r\n        answersArray.push(checkboxGroup);\r\n      } else {\r\n        answersArray.push(new FormControl(''));\r\n      }\r\n    });\r\n  }\r\n\r\n  startTimer() {\r\n    this.timerInterval = setInterval(() => {\r\n      this.timeRemaining--;\r\n      if (this.timeRemaining <= 0) {\r\n        this.submitInterview();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  formatTime(seconds: number): string {\r\n    return this.interviewService.formatTime(seconds);\r\n  }\r\n\r\n  selectSection(section: 'coding' | 'mcq' | 'qa') {\r\n    this.saveCurrentSectionData();\r\n    this.activeSection = section;\r\n  }\r\n\r\n  saveCurrentSectionData() {\r\n    if (this.activeSection === 'coding' && this.codingQuestions.length > 0) {\r\n      const currentQuestion = this.codingQuestions[this.currentCodingIndex];\r\n      this.codingAnswers[currentQuestion.id] = this.codingForm.value.code;\r\n    }\r\n    \r\n    if (this.activeSection === 'mcq') {\r\n      this.saveMCQAnswers();\r\n    }\r\n  }\r\n\r\n  saveMCQAnswers() {\r\n    const formAnswers = this.mcqForm.value.answers;\r\n    this.mcqAnswers = [];\r\n    \r\n    this.mcqQuestions.forEach((question, index) => {\r\n      const options = this.interviewService.parseOptions(question.options);\r\n      \r\n      if (question.multipleSelection) {\r\n        const selectedOptions: string[] = [];\r\n        const checkboxGroup = formAnswers[index];\r\n        Object.keys(checkboxGroup).forEach(option => {\r\n          if (checkboxGroup[option]) {\r\n            selectedOptions.push(option);\r\n          }\r\n        });\r\n        if (selectedOptions.length > 0) {\r\n          this.mcqAnswers.push({\r\n            questionId: question.id,\r\n            selectedOptions\r\n          });\r\n        }\r\n      } else {\r\n        if (formAnswers[index]) {\r\n          this.mcqAnswers.push({\r\n            questionId: question.id,\r\n            selectedOptions: [formAnswers[index]]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateCoding(direction: 'prev' | 'next') {\r\n    this.saveCurrentSectionData();\r\n    \r\n    if (direction === 'next' && this.currentCodingIndex < this.codingQuestions.length - 1) {\r\n      this.currentCodingIndex++;\r\n    } else if (direction === 'prev' && this.currentCodingIndex > 0) {\r\n      this.currentCodingIndex--;\r\n    }\r\n    \r\n    const currentQuestion = this.codingQuestions[this.currentCodingIndex];\r\n    const savedAnswer = this.codingAnswers[currentQuestion.id];\r\n    this.codingForm.patchValue({\r\n      code: savedAnswer || currentQuestion.starterCode || ''\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onSubjectiveAnswersUpdate(answers: any[]) {\r\n    this.subjectiveAnswers = answers;\r\n  }\r\n\r\n  async submitInterview() {\r\n    // Show confirmation dialog with current progress\r\n    const attemptedCount = this.getAttemptedCount();\r\n    const codingTotal = this.codingQuestions.length;\r\n    const mcqTotal = this.mcqQuestions.length;\r\n    const subjectiveTotal = 4; // Fixed number of subjective questions\r\n    const totalQuestions = codingTotal + mcqTotal + subjectiveTotal;\r\n    \r\n    const confirmMessage = `Are you sure you want to submit your interview?\\n\\n` +\r\n                          `Progress Summary:\\n` +\r\n                          `• Coding: ${this.getCodingAttemptedCount()}/${codingTotal} questions attempted\\n` +\r\n                          `• MCQ: ${this.getMCQAttemptedCount()}/${mcqTotal} questions attempted\\n` +\r\n                          `• Subjective: ${this.getSubjectiveAttemptedCount()}/${subjectiveTotal} questions attempted\\n` +\r\n                          `• Total: ${attemptedCount}/${totalQuestions} questions attempted\\n\\n` +\r\n                          `Time remaining: ${this.formatTime(this.timeRemaining)}\\n\\n` +\r\n                          `Once submitted, you cannot make any changes.`;\r\n\r\n    if (!confirm(confirmMessage)) {\r\n      return; // User cancelled submission\r\n    }\r\n\r\n    this.saveCurrentSectionData();\r\n    this.isSubmitting = true;\r\n    \r\n    if (this.timerInterval) {\r\n      clearInterval(this.timerInterval);\r\n    }\r\n\r\n    if (!this.candidateInfo) {\r\n      alert('Candidate information is missing. Please restart the interview.');\r\n      this.router.navigate(['/']);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const submission: InterviewSubmission = {\r\n        resumeId: this.resumeId,\r\n        candidateName: this.candidateInfo.name,\r\n        candidateEmail: this.candidateInfo.email,\r\n        domain: this.candidateInfo.domain,\r\n        experienceLevel: this.interviewService.getExperienceLevel(this.candidateInfo.experience),\r\n        totalQuestions: this.codingQuestions.length + this.mcqQuestions.length + this.subjectiveAnswers.length,\r\n        codingQuestions: this.codingQuestions.length,\r\n        mcqQuestions: this.mcqQuestions.length,\r\n        subjectiveQuestions: this.subjectiveAnswers.length,\r\n        correctAnswers: this.calculateCorrectAnswers(),\r\n        scorePercentage: this.calculateOverallScore(),\r\n        codingScore: this.calculateCodingScore(),\r\n        mcqScore: this.calculateMCQScore(),\r\n        subjectiveScore: this.calculateSubjectiveScore(),\r\n        interviewDuration: Math.round((45 * 60 - this.timeRemaining) / 60),\r\n        completedOnTime: this.timeRemaining > 0,\r\n        status: 'COMPLETED',\r\n        feedbackSummary: this.generateFeedbackSummary()\r\n      };\r\n\r\n      const response = await this.interviewService.submitInterview(submission).toPromise();\r\n      \r\n      if (response && response.success) {\r\n        // Save interview summary for thank you page\r\n        const interviewSummary = {\r\n          candidateName: this.candidateInfo.name,\r\n          domain: this.candidateInfo.domain,\r\n          experienceLevel: this.interviewService.getExperienceLevel(this.candidateInfo.experience),\r\n          codingQuestions: this.getCodingAttemptedCount(),\r\n          mcqQuestions: this.getMCQAttemptedCount(),\r\n          subjectiveQuestions: this.getSubjectiveAttemptedCount(),\r\n          totalQuestions: submission.totalQuestions,\r\n          interviewDuration: `${submission.interviewDuration} minutes`\r\n        };\r\n        \r\n        sessionStorage.setItem('interviewSummary', JSON.stringify(interviewSummary));\r\n        \r\n        // Navigate to thank you page\r\n        this.router.navigate(['/thank-you']);\r\n      } else {\r\n        throw new Error('Submission failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Submission error:', error);\r\n      alert('There was an error submitting your interview. Please try again.');\r\n    } finally {\r\n      this.isSubmitting = false;\r\n    }\r\n  }\r\n\r\n  calculateCorrectAnswers(): number {\r\n    const subjectiveCorrect = this.subjectiveAnswers.filter(a => a.correct).length;\r\n    // MCQ and coding scoring would be implemented based on backend responses\r\n    return subjectiveCorrect;\r\n  }\r\n\r\n  calculateOverallScore(): number {\r\n    const scores = [\r\n      this.calculateCodingScore(),\r\n      this.calculateMCQScore(),\r\n      this.calculateSubjectiveScore()\r\n    ].filter(score => score > 0);\r\n    \r\n    return scores.length > 0 ? Math.round(scores.reduce((a, b) => a + b, 0) / scores.length) : 0;\r\n  }\r\n\r\n  calculateCodingScore(): number {\r\n    // Placeholder - would be calculated by backend\r\n    return Object.keys(this.codingAnswers).length > 0 ? 75 : 0;\r\n  }\r\n\r\n  calculateMCQScore(): number {\r\n    // Placeholder - would be calculated by backend\r\n    return this.mcqAnswers.length > 0 ? 80 : 0;\r\n  }\r\n\r\n  calculateSubjectiveScore(): number {\r\n    if (this.subjectiveAnswers.length === 0) return 0;\r\n    \r\n    // Only count evaluated answers for scoring\r\n    const evaluatedAnswers = this.subjectiveAnswers.filter(answer => \r\n      answer.evaluated && answer.similarity !== undefined\r\n    );\r\n    \r\n    if (evaluatedAnswers.length === 0) {\r\n      // If no answers evaluated yet, return 0\r\n      return 0;\r\n    }\r\n    \r\n    const avgSimilarity = evaluatedAnswers.reduce((sum, answer) => \r\n      sum + (answer.similarity || 0), 0) / evaluatedAnswers.length;\r\n    return Math.round(avgSimilarity * 100);\r\n  }\r\n\r\n  generateFeedbackSummary(): string {\r\n    const sections = [];\r\n    if (Object.keys(this.codingAnswers).length > 0) {\r\n      sections.push('Coding: Demonstrated problem-solving abilities');\r\n    }\r\n    if (this.mcqAnswers.length > 0) {\r\n      sections.push('MCQ: Good technical knowledge');\r\n    }\r\n    if (this.subjectiveAnswers.length > 0) {\r\n      sections.push('Subjective: Clear communication and understanding');\r\n    }\r\n    return sections.join('. ') + '.';\r\n  }\r\n\r\n  get currentCodingQuestion(): CodingQuestion | null {\r\n    return this.codingQuestions[this.currentCodingIndex] || null;\r\n  }\r\n\r\n  get answersArray(): FormArray {\r\n    return this.mcqForm.get('answers') as FormArray;\r\n  }\r\n\r\n  // Simple pre-parsed MCQ options (no caching needed)\r\n  mcqOptionsMap: { [questionId: string]: string[] } = {\r\n    'mcq-1': ['Java', 'HTML', 'CSS', 'SQL'],\r\n    'mcq-2': ['INSERT', 'SELECT', 'UPDATE', 'DELETE'],\r\n    'mcq-3': ['Angular', 'React', 'Node.js', 'MongoDB']\r\n  };\r\n\r\n  // Current question tracking for single-question view\r\n  currentMCQIndex: number = 0;\r\n  currentSubjectiveIndex: number = 0;\r\n\r\n  getCurrentMCQQuestion(): MCQQuestion | null {\r\n    return this.mcqQuestions[this.currentMCQIndex] || null;\r\n  }\r\n\r\n  getCurrentMCQOptions(): string[] {\r\n    const question = this.getCurrentMCQQuestion();\r\n    return question ? (this.mcqOptionsMap[question.id] || []) : [];\r\n  }\r\n\r\n  // Simple MCQ answer storage\r\n  mcqAnswerStorage: { [questionId: string]: string | string[] } = {};\r\n\r\n  selectSingleOption(option: string): void {\r\n    const question = this.getCurrentMCQQuestion();\r\n    if (question) {\r\n      this.mcqAnswerStorage[question.id] = option;\r\n    }\r\n  }\r\n\r\n  toggleMultipleOption(option: string, event: any): void {\r\n    const question = this.getCurrentMCQQuestion();\r\n    if (question) {\r\n      let currentAnswers = this.mcqAnswerStorage[question.id] as string[] || [];\r\n      if (event.target.checked) {\r\n        if (!currentAnswers.includes(option)) {\r\n          currentAnswers.push(option);\r\n        }\r\n      } else {\r\n        currentAnswers = currentAnswers.filter(ans => ans !== option);\r\n      }\r\n      this.mcqAnswerStorage[question.id] = currentAnswers;\r\n    }\r\n  }\r\n\r\n  clearCurrentMCQResponse(): void {\r\n    const question = this.getCurrentMCQQuestion();\r\n    if (question) {\r\n      delete this.mcqAnswerStorage[question.id];\r\n      // Clear form inputs\r\n      const inputs = document.querySelectorAll(`input[name=\"mcq_${question.id}\"]`) as NodeListOf<HTMLInputElement>;\r\n      inputs.forEach(input => input.checked = false);\r\n      \r\n      const checkboxes = document.querySelectorAll('.option-item input[type=\"checkbox\"]') as NodeListOf<HTMLInputElement>;\r\n      checkboxes.forEach(checkbox => checkbox.checked = false);\r\n    }\r\n  }\r\n\r\n  getCurrentSubjectiveQuestion() {\r\n    return this.subjectiveAnswers[this.currentSubjectiveIndex] || null;\r\n  }\r\n\r\n  // Navigation methods for single question view\r\n  canNavigateMCQPrevious(): boolean {\r\n    return this.currentMCQIndex > 0;\r\n  }\r\n\r\n  canNavigateMCQNext(): boolean {\r\n    return this.currentMCQIndex < this.mcqQuestions.length - 1;\r\n  }\r\n\r\n  navigateMCQPrevious(): void {\r\n    if (this.canNavigateMCQPrevious()) {\r\n      this.currentMCQIndex--;\r\n    }\r\n  }\r\n\r\n  navigateMCQNext(): void {\r\n    if (this.canNavigateMCQNext()) {\r\n      this.currentMCQIndex++;\r\n    }\r\n  }\r\n\r\n  // Get total questions for current section\r\n  getTotalQuestionsForSection(): number {\r\n    switch (this.activeSection) {\r\n      case 'coding': return this.codingQuestions.length;\r\n      case 'mcq': return this.mcqQuestions.length;\r\n      case 'qa': return 4; // Fixed number of subjective questions\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  // Get current question index for active section\r\n  getCurrentQuestionIndex(): number {\r\n    switch (this.activeSection) {\r\n      case 'coding': return this.currentCodingIndex;\r\n      case 'mcq': return this.currentMCQIndex;\r\n      case 'qa': return this.currentSubjectiveIndex;\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  // Get attempted questions count for active section (questions with actual answers)\r\n  getAttemptedCount(): number {\r\n    switch (this.activeSection) {\r\n      case 'coding': return this.getCodingAttemptedCount();\r\n      case 'mcq': return this.getMCQAttemptedCount();\r\n      case 'qa': return this.getSubjectiveAttemptedCount();\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  getCodingAttemptedCount(): number {\r\n    let count = 0;\r\n    this.codingQuestions.forEach(question => {\r\n      const answer = this.codingAnswers[question.id];\r\n      // Count as attempted if user typed something different from starter code\r\n      if (answer && answer.trim() && answer.trim() !== (question.starterCode || '').trim()) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  getMCQAttemptedCount(): number {\r\n    let count = 0;\r\n    this.mcqQuestions.forEach(question => {\r\n      const answer = this.mcqAnswerStorage[question.id];\r\n      if (answer) {\r\n        if (question.multipleSelection) {\r\n          // For multiple selection, check if array has any items\r\n          if (Array.isArray(answer) && answer.length > 0) {\r\n            count++;\r\n          }\r\n        } else {\r\n          // For single selection, check if string is not empty\r\n          if (typeof answer === 'string' && answer.trim()) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  getSubjectiveAttemptedCount(): number {\r\n    // Count subjective answers that have actual text content\r\n    return this.subjectiveAnswers.filter(answer => \r\n      answer.answer && answer.answer.trim().length > 0\r\n    ).length;\r\n  }\r\n\r\n  // Universal navigation methods\r\n  canNavigatePrevious(): boolean {\r\n    switch (this.activeSection) {\r\n      case 'coding': return this.currentCodingIndex > 0;\r\n      case 'mcq': return this.canNavigateMCQPrevious();\r\n      case 'qa': return this.currentSubjectiveIndex > 0;\r\n      default: return false;\r\n    }\r\n  }\r\n\r\n  canNavigateNext(): boolean {\r\n    switch (this.activeSection) {\r\n      case 'coding': return this.currentCodingIndex < this.codingQuestions.length - 1;\r\n      case 'mcq': return this.canNavigateMCQNext();\r\n      case 'qa': return this.currentSubjectiveIndex < 3; // 4 questions (0-3)\r\n      default: return false;\r\n    }\r\n  }\r\n\r\n  navigatePreviousQuestion(): void {\r\n    switch (this.activeSection) {\r\n      case 'coding': \r\n        if (this.currentCodingIndex > 0) {\r\n          this.navigateCoding('prev');\r\n        }\r\n        break;\r\n      case 'mcq': this.navigateMCQPrevious(); break;\r\n      case 'qa': this.currentSubjectiveIndex = Math.max(0, this.currentSubjectiveIndex - 1); break;\r\n    }\r\n  }\r\n\r\n  navigateNextQuestion(): void {\r\n    switch (this.activeSection) {\r\n      case 'coding': \r\n        if (this.currentCodingIndex < this.codingQuestions.length - 1) {\r\n          this.navigateCoding('next');\r\n        }\r\n        break;\r\n      case 'mcq': this.navigateMCQNext(); break;\r\n      case 'qa': this.currentSubjectiveIndex = Math.min(3, this.currentSubjectiveIndex + 1); break; // 4 questions (0-3)\r\n    }\r\n  }\r\n\r\n  goToQuestion(index: number): void {\r\n    switch (this.activeSection) {\r\n      case 'coding': \r\n        if (index >= 0 && index < this.codingQuestions.length) {\r\n          this.currentCodingIndex = index;\r\n          const currentQuestion = this.codingQuestions[this.currentCodingIndex];\r\n          const savedAnswer = this.codingAnswers[currentQuestion.id];\r\n          this.codingForm.patchValue({\r\n            code: savedAnswer || currentQuestion.starterCode || ''\r\n          });\r\n        }\r\n        break;\r\n      case 'mcq': \r\n        if (index >= 0 && index < this.mcqQuestions.length) {\r\n          this.currentMCQIndex = index;\r\n        }\r\n        break;\r\n      case 'qa': \r\n        if (index >= 0 && index < 4) { // 4 subjective questions\r\n          this.currentSubjectiveIndex = index;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  getQuestionNumbers(): number[] {\r\n    const total = this.getTotalQuestionsForSection();\r\n    return Array.from({ length: total }, (_, i) => i);\r\n  }\r\n} ","<div class=\"mettl-assessment\" *ngIf=\"!isLoading\">\r\n  <!-- Top Header -->\r\n  <div class=\"mettl-header\">\r\n    <div class=\"header-left\">\r\n      <div class=\"logo-section\">\r\n        <span class=\"assessment-title\">Technical Interview Assessment</span>\r\n      </div>\r\n      <div class=\"candidate-info\" *ngIf=\"candidateInfo\">\r\n        {{ candidateInfo.name }} | {{ candidateInfo.domain }}\r\n      </div>\r\n    </div>\r\n    <div class=\"header-right\">\r\n      <div class=\"timer-section\">\r\n        <i class=\"fas fa-clock\"></i>\r\n        <span>Test Time: {{ formatTime(timeRemaining) }}</span>\r\n      </div>\r\n      \r\n      <!-- Question Navigation -->\r\n      <div class=\"question-navigation\">\r\n        <button \r\n          class=\"nav-btn prev-btn\"\r\n          [disabled]=\"!canNavigatePrevious()\"\r\n          (click)=\"navigatePreviousQuestion()\">\r\n          <i class=\"fas fa-chevron-left\"></i>\r\n          Previous\r\n        </button>\r\n        \r\n        <span class=\"question-counter\">\r\n          {{ getCurrentQuestionIndex() + 1 }} of {{ getTotalQuestionsForSection() }}\r\n        </span>\r\n        \r\n        <button \r\n          class=\"nav-btn next-btn\"\r\n          [disabled]=\"!canNavigateNext()\"\r\n          (click)=\"navigateNextQuestion()\">\r\n          Next\r\n          <i class=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Section Navigation -->\r\n  <div class=\"section-navigation\">\r\n    <div class=\"section-selector\">\r\n      <button \r\n        class=\"section-btn\" \r\n        [class.active]=\"activeSection === 'coding'\"\r\n        (click)=\"selectSection('coding')\">\r\n        Section #1 (Coding)\r\n      </button>\r\n      <button \r\n        class=\"section-btn\" \r\n        [class.active]=\"activeSection === 'mcq'\"\r\n        (click)=\"selectSection('mcq')\">\r\n        Section #2 (MCQ)\r\n      </button>\r\n      <button \r\n        class=\"section-btn\" \r\n        [class.active]=\"activeSection === 'qa'\"\r\n        (click)=\"selectSection('qa')\">\r\n        Section #3 (Q&A)\r\n      </button>\r\n    </div>\r\n    <div class=\"attempted-info\">\r\n      Attempted: {{ getAttemptedCount() }}/{{ getTotalQuestionsForSection() }}\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Main Question Area -->\r\n  <div class=\"question-container\">\r\n    \r\n    <!-- Question Left Panel -->\r\n    <div class=\"question-left\">\r\n      <!-- Coding Section -->\r\n      <div *ngIf=\"activeSection === 'coding'\" class=\"question-content\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ currentCodingIndex + 1 }}</h3>\r\n        </div>\r\n        \r\n        <div *ngIf=\"currentCodingQuestion\" class=\"question-body\">\r\n          <h4>{{ currentCodingQuestion.title }}</h4>\r\n          <div class=\"question-text\">\r\n            {{ currentCodingQuestion.description }}\r\n          </div>\r\n          \r\n          <form [formGroup]=\"codingForm\" class=\"coding-input\">\r\n            <label>Your Solution:</label>\r\n            <textarea \r\n              formControlName=\"code\"\r\n              class=\"code-textarea\"\r\n              placeholder=\"Write your code here...\"\r\n              rows=\"12\">\r\n            </textarea>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- MCQ Section -->\r\n      <div *ngIf=\"activeSection === 'mcq'\" class=\"question-content\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ currentMCQIndex + 1 }}</h3>\r\n        </div>\r\n        \r\n        <div *ngIf=\"getCurrentMCQQuestion()\" class=\"question-body\">\r\n          <div class=\"question-text\">\r\n            {{ getCurrentMCQQuestion()?.description }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Q&A Section -->\r\n      <div *ngIf=\"activeSection === 'qa'\" class=\"question-content\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ currentSubjectiveIndex + 1 }}</h3>\r\n        </div>\r\n        \r\n        <div class=\"question-body\">\r\n          <app-subjective-qa \r\n            [domain]=\"candidateInfo?.domain || ''\"\r\n            [resumeId]=\"resumeId\"\r\n            [currentQuestionIndex]=\"currentSubjectiveIndex\"\r\n            (answersUpdate)=\"onSubjectiveAnswersUpdate($event)\">\r\n          </app-subjective-qa>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Answer Right Panel -->\r\n    <div class=\"answer-right\">\r\n      <!-- MCQ Options -->\r\n      <div *ngIf=\"activeSection === 'mcq' && getCurrentMCQQuestion()\" class=\"answer-section\">\r\n        <h4>Select an option</h4>\r\n        \r\n        <div class=\"mcq-options\">\r\n          <div class=\"options-list\">\r\n            <!-- Single Choice Questions -->\r\n            <ng-container *ngIf=\"!getCurrentMCQQuestion()?.multipleSelection\">\r\n              <div class=\"option-item\" *ngFor=\"let option of getCurrentMCQOptions(); let i = index\">\r\n                <input \r\n                  type=\"radio\" \r\n                  [id]=\"'option_' + i\"\r\n                  [name]=\"'mcq_' + getCurrentMCQQuestion()?.id\"\r\n                  [value]=\"option\"\r\n                  (change)=\"selectSingleOption(option)\">\r\n                <label [for]=\"'option_' + i\">{{ option }}</label>\r\n              </div>\r\n            </ng-container>\r\n            \r\n            <!-- Multiple Choice Questions -->\r\n            <ng-container *ngIf=\"getCurrentMCQQuestion()?.multipleSelection\">\r\n              <div class=\"option-item\" *ngFor=\"let option of getCurrentMCQOptions(); let i = index\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  [id]=\"'option_' + i\"\r\n                  [value]=\"option\"\r\n                  (change)=\"toggleMultipleOption(option, $event)\">\r\n                <label [for]=\"'option_' + i\">{{ option }}</label>\r\n              </div>\r\n              <small class=\"multiple-hint\">Select all that apply</small>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"clear-response\">\r\n          <button class=\"clear-btn\" (click)=\"clearCurrentMCQResponse()\">\r\n            <i class=\"fas fa-times\"></i>\r\n            Clear Response\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Bottom Navigation -->\r\n  <div class=\"bottom-navigation\">\r\n    <div class=\"nav-right\">\r\n      <button class=\"submit-btn\" (click)=\"submitInterview()\" [disabled]=\"isSubmitting\">\r\n        <i class=\"fas fa-paper-plane\" *ngIf=\"!isSubmitting\"></i>\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isSubmitting\"></i>\r\n        {{ isSubmitting ? 'Submitting...' : 'Submit Interview' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Loading State -->\r\n<div class=\"loading-container\" *ngIf=\"isLoading\">\r\n  <div class=\"loading-content\">\r\n    <i class=\"fas fa-spinner fa-spin\"></i>\r\n    <h2>Preparing Your Interview</h2>\r\n    <p>Loading questions based on your profile...</p>\r\n  </div>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}